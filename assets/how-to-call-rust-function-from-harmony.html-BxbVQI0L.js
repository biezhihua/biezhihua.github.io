import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{e as a,f as n,o as l}from"./app--bm1PHxT.js";const e={};function p(h,s){return l(),a("div",null,s[0]||(s[0]=[n(`<h1 id="如何在harmony-native-c-项目中调用rust库代码" tabindex="-1"><a class="header-anchor" href="#如何在harmony-native-c-项目中调用rust库代码"><span>如何在Harmony Native C++项目中调用Rust库代码</span></a></h1><h2 id="主机配置" tabindex="-1"><a class="header-anchor" href="#主机配置"><span>主机配置</span></a></h2><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>MacBook Pro</span></span>
<span class="line"><span>2.6 GHz 6-Core Intel Core i7</span></span>
<span class="line"><span>13.1 (22C65)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="对rust库进行交叉编译得到可在harmonynext平台运行的产物" tabindex="-1"><a class="header-anchor" href="#对rust库进行交叉编译得到可在harmonynext平台运行的产物"><span>对Rust库进行交叉编译得到可在HarmonyNext平台运行的产物</span></a></h2><h3 id="工程目录树" tabindex="-1"><a class="header-anchor" href="#工程目录树"><span>工程目录树</span></a></h3><p>我的Rust工程文件目录树如下：</p><div class="language-text line-numbers-mode" data-highlighter="shiki" data-ext="text" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>./</span></span>
<span class="line"><span>├── .gitignore</span></span>
<span class="line"><span>├── Cargo.lock</span></span>
<span class="line"><span>├── Cargo.toml</span></span>
<span class="line"><span>├── aarch64-unknown-linux-ohos-clang++.sh</span></span>
<span class="line"><span>├── aarch64-unknown-linux-ohos-clang.sh</span></span>
<span class="line"><span>├── armv7-unknown-linux-ohos-clang++.sh</span></span>
<span class="line"><span>├── armv7-unknown-linux-ohos-clang.sh</span></span>
<span class="line"><span>├── config</span></span>
<span class="line"><span>├── src</span></span>
<span class="line"><span>│   └── lib.rs</span></span>
<span class="line"><span>├── x86_64-unknown-linux-ohos-clang++.sh</span></span>
<span class="line"><span>└── x86_64-unknown-linux-ohos-clang.sh</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="什么是交叉编译" tabindex="-1"><a class="header-anchor" href="#什么是交叉编译"><span>什么是交叉编译</span></a></h3><p>介绍下“交叉编译”的概念 - 所谓&quot;交叉编译（Cross_Compile）&quot;，是指编译源代码的平台和执行源代码编译后程序的平台是两个不同的平台。比如，在Intel x86架构/Linux（Ubuntu）平台下、使用交叉编译工具链生成的可执行文件，在ARM架构/Linux下运行。</p><h3 id="交叉编译的前置配置工作" tabindex="-1"><a class="header-anchor" href="#交叉编译的前置配置工作"><span>交叉编译的前置配置工作</span></a></h3><p>想要让Rust库在HarmonyNext平台上运行，那么第一件事便是要交叉编译得到其产物，这块Rust官方已经有了文档了。（https://doc.rust-lang.org/rustc/platform-support/openharmony.html）</p><p>在配置好OpenHarmonySDK的路径后，需要按照文档指引找个地方配置如下文件，我是在工程目录下配置的: <code>aarch64-unknown-linux-ohos-clang.sh</code></p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#!/bin/sh</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">exec</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /Users/biezhihua/Software/OpenHarmony/Sdk/10/native/llvm/bin/clang</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  -target</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> aarch64-linux-ohos</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  --sysroot=/Users/biezhihua/Software/OpenHarmony/Sdk/10/native/sysroot</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  -D__MUSL__</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  &quot;</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">$@</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>aarch64-unknown-linux-ohos-clang++.sh</code></p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#!/bin/sh</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">exec</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /Users/biezhihua/Software/OpenHarmony/Sdk/10/native/llvm/bin/clang++</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  -target</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> aarch64-linux-ohos</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  --sysroot=/Users/biezhihua/Software/OpenHarmony/Sdk/10/native/sysroot</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  -D__MUSL__</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  &quot;</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">$@</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>armv7-unknown-linux-ohos-clang.sh</code></p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#!/bin/sh</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">exec</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /Users/biezhihua/Software/OpenHarmony/Sdk/10/native/llvm/bin/clang</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  -target</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> arm-linux-ohos</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  --sysroot=/Users/biezhihua/Software/OpenHarmony/Sdk/10/native/sysroot</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  -D__MUSL__</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  -march=armv7-a</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  -mfloat-abi=softfp</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  -mtune=generic-armv7-a</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  -mthumb</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  &quot;</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">$@</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>armv7-unknown-linux-ohos-clang++.sh</code></p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#!/bin/sh</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">exec</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /Users/biezhihua/Software/OpenHarmony/Sdk/10/native/llvm/bin/clang++</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  -target</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> arm-linux-ohos</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  --sysroot=/Users/biezhihua/Software/OpenHarmony/Sdk/10/native/sysroot</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  -D__MUSL__</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  -march=armv7-a</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  -mfloat-abi=softfp</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  -mtune=generic-armv7-a</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  -mthumb</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  &quot;</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">$@</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>x86_64-unknown-linux-ohos-clang.sh</code></p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#!/bin/sh</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">exec</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /Users/biezhihua/Software/OpenHarmony/Sdk/10/native/llvm/bin/clang</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  -target</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> x86_64-linux-ohos</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  --sysroot=/Users/biezhihua/Software/OpenHarmony/Sdk/10/native/sysroot</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  -D__MUSL__</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  &quot;</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">$@</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>x86_64-unknown-linux-ohos-clang++.sh</code></p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#!/bin/sh</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">exec</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /Users/biezhihua/Software/OpenHarmony/Sdk/10/native/llvm/bin/clang++</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  -target</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> x86_64-linux-ohos</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  --sysroot=/Users/biezhihua/Software/OpenHarmony/Sdk/10/native/sysroot</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  -D__MUSL__</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  &quot;</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">$@</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>再将下面的配置增加到<code>~/.cargo/config</code>文件中，如果文件不存在就创建一个：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[target.aarch64-unknown-linux-ohos]</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">linker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;/Users/biezhihua/WorkSpace/YKGAIAX/GaiaX/harmony/aarch64-unknown-linux-ohos-clang.sh&quot;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ar</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">      =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;/Users/biezhihua/Software/OpenHarmony/Sdk/10/native/llvm/bin/llvm-ar&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[target.armv7-unknown-linux-ohos]</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">linker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;/Users/biezhihua/WorkSpace/YKGAIAX/GaiaX/harmony/armv7-unknown-linux-ohos-clang.sh&quot;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ar</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">      =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;/Users/biezhihua/Software/OpenHarmony/Sdk/10/native/llvm/bin/llvm-ar&quot;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[target.x86_64-unknown-linux-ohos]</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">linker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;/Users/biezhihua/WorkSpace/YKGAIAX/GaiaX/harmony/x86_64-unknown-linux-ohos-clang.sh&quot;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ar</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">      =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;/Users/biezhihua/Software/OpenHarmony/Sdk/10/native/llvm/bin/llvm-ar&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="将rustup切换到nightly版本上" tabindex="-1"><a class="header-anchor" href="#将rustup切换到nightly版本上"><span>将rustup切换到nightly版本上</span></a></h3><p>由于rust的stable版本不支持OpenHaronmy的预编译产物，所以需要将rustup切换到nightly版本上。</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> rustup</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -v</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">rustup</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1.26.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (5af9b9484 </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">2023-04-05</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">The</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Rust</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> toolchain</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> installer</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">rustup</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> update</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> stable</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">rustup</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> default</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> nightly</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>$ rustup default nightly</span></span>
<span class="line"><span>info: using existing install for &#39;nightly-x86_64-apple-darwin&#39;</span></span>
<span class="line"><span>info: default toolchain set to &#39;nightly-x86_64-apple-darwin&#39;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>  nightly-x86_64-apple-darwin unchanged - rustc 1.75.0-nightly (49691b1f7 2023-10-16)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>执行一下下面的命令，也会明确的告诉我们不支持目标平台，并且也给了我们提示，让我们利用<code>cargo build -Z build-std</code>进行编译:</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">rustup</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> target</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> add</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> aarch64-unknown-linux-ohos</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> armv7-unknown-linux-ohos</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> x86_64-unknown-linux-ohos</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>$ rustup target add aarch64-unknown-linux-ohos armv7-unknown-linux-ohos x86_64-unknown-linux-ohos</span></span>
<span class="line"><span></span></span>
<span class="line"><span>error: toolchain &#39;nightly-x86_64-apple-darwin&#39; does not contain component &#39;rust-std&#39; for target &#39;aarch64-unknown-linux-ohos&#39;</span></span>
<span class="line"><span>note: not all platforms have the standard library pre-compiled: https://doc.rust-lang.org/nightly/rustc/platform-support.html</span></span>
<span class="line"><span>help: consider using \`cargo build -Z build-std\` instead</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在开始交叉编译前，为<code>lib.rs</code>中增加两个简单的方法，需要注意目前仅支持将Rust代码通过FFI特性导出编译为C代码，C++是不支持的：</p><div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF;">#[no_mangle]</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> extern</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;C&quot;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> hello_from_rust</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">() {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    println!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Hello from Rust!&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF;">#[no_mangle]</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> extern</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;C&quot;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> hello2_from_rust</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">i32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">b</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">i32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)-&gt; </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">i32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    return</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> + </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">b</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>随后，我们在<code>Cargo.toml</code>中增加打包产物配置，下面的配置经过交叉编译会得到<code>libtest.so</code>的文件：</p><div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">lib</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">name</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;test&quot;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">crate</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">type</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;cdylib&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="交叉编译" tabindex="-1"><a class="header-anchor" href="#交叉编译"><span>交叉编译</span></a></h3><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> cargo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> +nightly</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> build</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  -Z</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> build-std</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --target</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> x86_64-unknown-linux-ohos</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   Compiling</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> compiler_builtins</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v0.1.101</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   Compiling</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> core</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v0.0.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (/Users/biezhihua/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/src/rust/library/core)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   Compiling</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> libc</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v0.2.149</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   Compiling</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> cc</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v1.0.79</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   Compiling</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> memchr</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v2.5.0</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   Compiling</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> std</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v0.0.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (/Users/biezhihua/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/src/rust/library/std)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   Compiling</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> unwind</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v0.0.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (/Users/biezhihua/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/src/rust/library/unwind)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   Compiling</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> rustc-std-workspace-core</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v1.99.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (/Users/biezhihua/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/src/rust/library/rustc-std-workspace-core)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   Compiling</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> alloc</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v0.0.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (/Users/biezhihua/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/src/rust/library/alloc)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   Compiling</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> cfg-if</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v1.0.0</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   Compiling</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> adler</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v1.0.2</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   Compiling</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> rustc-demangle</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v0.1.23</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   Compiling</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> rustc-std-workspace-alloc</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v1.99.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (/Users/biezhihua/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/src/rust/library/rustc-std-workspace-alloc)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   Compiling</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> panic_unwind</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v0.0.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (/Users/biezhihua/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/src/rust/library/panic_unwind)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   Compiling</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> panic_abort</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v0.0.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (/Users/biezhihua/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/src/rust/library/panic_abort)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   Compiling</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> gimli</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v0.28.0</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   Compiling</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> miniz_oxide</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v0.7.1</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   Compiling</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> std_detect</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v0.1.5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (/Users/biezhihua/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/src/rust/library/stdarch/crates/std_detect)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   Compiling</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> hashbrown</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v0.14.0</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   Compiling</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> object</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v0.32.0</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   Compiling</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> addr2line</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v0.21.0</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   Compiling</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> proc_macro</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v0.0.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (/Users/biezhihua/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/src/rust/library/proc_macro)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   Compiling</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> harmony</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v0.1.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (/Users/biezhihua/WorkSpace/YKGAIAX/GaiaX/harmony)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    Finished</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> dev</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [unoptimized </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">+</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> debuginfo]</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> target</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">s</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">in</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 56.12s</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> cargo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> +nightly</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> build</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  -Z</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> build-std</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --target</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> armv7-unknown-linux-ohos</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   Compiling</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> compiler_builtins</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v0.1.101</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   Compiling</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> core</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v0.0.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (/Users/biezhihua/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/src/rust/library/core)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   Compiling</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> libc</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v0.2.149</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   Compiling</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> memchr</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v2.5.0</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   Compiling</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> unwind</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v0.0.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (/Users/biezhihua/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/src/rust/library/unwind)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   Compiling</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> std</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v0.0.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (/Users/biezhihua/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/src/rust/library/std)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   Compiling</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> rustc-std-workspace-core</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v1.99.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (/Users/biezhihua/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/src/rust/library/rustc-std-workspace-core)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   Compiling</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> alloc</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v0.0.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (/Users/biezhihua/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/src/rust/library/alloc)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   Compiling</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> cfg-if</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v1.0.0</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   Compiling</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> adler</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v1.0.2</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   Compiling</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> rustc-demangle</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v0.1.23</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   Compiling</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> rustc-std-workspace-alloc</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v1.99.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (/Users/biezhihua/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/src/rust/library/rustc-std-workspace-alloc)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   Compiling</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> panic_abort</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v0.0.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (/Users/biezhihua/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/src/rust/library/panic_abort)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   Compiling</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> panic_unwind</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v0.0.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (/Users/biezhihua/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/src/rust/library/panic_unwind)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   Compiling</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> gimli</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v0.28.0</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   Compiling</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> std_detect</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v0.1.5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (/Users/biezhihua/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/src/rust/library/stdarch/crates/std_detect)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   Compiling</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> object</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v0.32.0</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   Compiling</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> hashbrown</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v0.14.0</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   Compiling</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> miniz_oxide</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v0.7.1</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   Compiling</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> addr2line</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v0.21.0</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   Compiling</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> proc_macro</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v0.0.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (/Users/biezhihua/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/src/rust/library/proc_macro)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   Compiling</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> harmony</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v0.1.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (/Users/biezhihua/WorkSpace/YKGAIAX/GaiaX/harmony)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    Finished</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> dev</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [unoptimized </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">+</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> debuginfo]</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> target</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">s</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">in</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 57.73s</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> cargo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> +nightly</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> build</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  -Z</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> build-std</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --target</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> aarch64-unknown-linux-ohos</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   Compiling</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> compiler_builtins</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v0.1.101</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   Compiling</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> core</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v0.0.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (/Users/biezhihua/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/src/rust/library/core)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   Compiling</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> libc</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v0.2.149</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   Compiling</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> rustc-std-workspace-core</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v1.99.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (/Users/biezhihua/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/src/rust/library/rustc-std-workspace-core)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   Compiling</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> memchr</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v2.5.0</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   Compiling</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> unwind</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v0.0.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (/Users/biezhihua/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/src/rust/library/unwind)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   Compiling</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> std</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v0.0.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (/Users/biezhihua/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/src/rust/library/std)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   Compiling</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> alloc</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v0.0.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (/Users/biezhihua/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/src/rust/library/alloc)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   Compiling</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> cfg-if</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v1.0.0</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   Compiling</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> adler</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v1.0.2</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   Compiling</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> rustc-demangle</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v0.1.23</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   Compiling</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> rustc-std-workspace-alloc</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v1.99.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (/Users/biezhihua/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/src/rust/library/rustc-std-workspace-alloc)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   Compiling</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> panic_abort</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v0.0.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (/Users/biezhihua/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/src/rust/library/panic_abort)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   Compiling</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> panic_unwind</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v0.0.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (/Users/biezhihua/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/src/rust/library/panic_unwind)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   Compiling</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> gimli</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v0.28.0</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   Compiling</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> miniz_oxide</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v0.7.1</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   Compiling</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> std_detect</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v0.1.5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (/Users/biezhihua/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/src/rust/library/stdarch/crates/std_detect)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   Compiling</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> object</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v0.32.0</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   Compiling</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> hashbrown</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v0.14.0</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   Compiling</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> addr2line</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v0.21.0</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   Compiling</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> proc_macro</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v0.0.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (/Users/biezhihua/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/src/rust/library/proc_macro)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   Compiling</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> harmony</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v0.1.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (/Users/biezhihua/WorkSpace/YKGAIAX/GaiaX/harmony)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    Finished</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> dev</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [unoptimized </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">+</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> debuginfo]</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> target</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">s</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">in</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 45.05s</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>编译成功后，可以在下列路径找到编译产物：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>harmony/target/x86_64-unknown-linux-ohos/debug/libtest.so</span></span>
<span class="line"><span>harmony/target/armv7-unknown-linux-ohos/debug/libtest.so</span></span>
<span class="line"><span>harmony/target/aarch64-unknown-linux-ohos/debug/libtest.so</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>目录结构如下:</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>$ tree</span></span>
<span class="line"><span>.</span></span>
<span class="line"><span>├── Cargo.lock</span></span>
<span class="line"><span>├── Cargo.toml</span></span>
<span class="line"><span>├── aarch64-unknown-linux-ohos-clang++.sh</span></span>
<span class="line"><span>├── aarch64-unknown-linux-ohos-clang.sh</span></span>
<span class="line"><span>├── armv7-unknown-linux-ohos-clang++.sh</span></span>
<span class="line"><span>├── armv7-unknown-linux-ohos-clang.sh</span></span>
<span class="line"><span>├── config</span></span>
<span class="line"><span>├── src</span></span>
<span class="line"><span>│   └── lib.rs</span></span>
<span class="line"><span>├── target</span></span>
<span class="line"><span>│   ├── CACHEDIR.TAG</span></span>
<span class="line"><span>│   ├── aarch64-unknown-linux-ohos</span></span>
<span class="line"><span>│   │   └── debug</span></span>
<span class="line"><span>│   │       └── libtest.so</span></span>
<span class="line"><span>│   ├── armv7-unknown-linux-ohos</span></span>
<span class="line"><span>│   │   └── debug</span></span>
<span class="line"><span>│   │       └── libtest.so</span></span>
<span class="line"><span>│   └── x86_64-unknown-linux-ohos</span></span>
<span class="line"><span>│       └── debug</span></span>
<span class="line"><span>│           └── libtest.so</span></span>
<span class="line"><span>├── x86_64-unknown-linux-ohos-clang++.sh</span></span>
<span class="line"><span>└── x86_64-unknown-linux-ohos-clang.sh</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="在harmonynextnative工程中引入编译产物并调用" tabindex="-1"><a class="header-anchor" href="#在harmonynextnative工程中引入编译产物并调用"><span>在HarmonyNextNative工程中引入编译产物并调用</span></a></h2><h3 id="创建native-c-工程并引入交叉编译的产物" tabindex="-1"><a class="header-anchor" href="#创建native-c-工程并引入交叉编译的产物"><span>创建Native C++工程并引入交叉编译的产物</span></a></h3><p>利用DevEco Studio创建一个Native C++工程，并在<code>libs</code>目录下创建三个子目录<code>arm64-v8a</code>、<code>armeabi-v7a</code>、<code>x86_64</code>，并将交叉编译的产物复制过来，目录结构如下：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>.</span></span>
<span class="line"><span>├── AppScope</span></span>
<span class="line"><span>│   ├── app.json5</span></span>
<span class="line"><span>│   └── resources</span></span>
<span class="line"><span>│       └── base</span></span>
<span class="line"><span>│           ├── element</span></span>
<span class="line"><span>│           │   └── string.json</span></span>
<span class="line"><span>│           └── media</span></span>
<span class="line"><span>│               └── app_icon.png</span></span>
<span class="line"><span>├── build-profile.json5</span></span>
<span class="line"><span>├── entry</span></span>
<span class="line"><span>│   ├── build-profile.json5</span></span>
<span class="line"><span>│   ├── hvigorfile.ts</span></span>
<span class="line"><span>│   ├── libs</span></span>
<span class="line"><span>│   │   ├── arm64-v8a</span></span>
<span class="line"><span>│   │   │   └── libtest.so</span></span>
<span class="line"><span>│   │   ├── armeabi-v7a</span></span>
<span class="line"><span>│   │   │   └── libtest.so</span></span>
<span class="line"><span>│   │   └── x86_64</span></span>
<span class="line"><span>│   │       └── libtest.so</span></span>
<span class="line"><span>│   ├── oh-package.json5</span></span>
<span class="line"><span>│   ├── oh_modules</span></span>
<span class="line"><span>│   │   └── libentry.so -&gt; ../src/main/cpp/types/libentry</span></span>
<span class="line"><span>│   └── src</span></span>
<span class="line"><span>│       ├── main</span></span>
<span class="line"><span>│       │   ├── cpp</span></span>
<span class="line"><span>│       │   │   ├── CMakeLists.txt</span></span>
<span class="line"><span>│       │   │   ├── hello.cpp</span></span>
<span class="line"><span>│       │   │   └── types</span></span>
<span class="line"><span>│       │   │       └── libentry</span></span>
<span class="line"><span>│       │   │           ├── index.d.ts</span></span>
<span class="line"><span>│       │   │           └── oh-package.json5</span></span>
<span class="line"><span>│       │   ├── ets</span></span>
<span class="line"><span>│       │   │   ├── entryability</span></span>
<span class="line"><span>│       │   │   │   └── EntryAbility.ts</span></span>
<span class="line"><span>│       │   │   └── pages</span></span>
<span class="line"><span>│       │   │       └── Index.ets</span></span>
<span class="line"><span>│       │   ├── module.json5</span></span>
<span class="line"><span>│       │   └── resources</span></span>
<span class="line"><span>│       │       ├── base</span></span>
<span class="line"><span>│       │       │   ├── element</span></span>
<span class="line"><span>│       │       │   │   ├── color.json</span></span>
<span class="line"><span>│       │       │   │   └── string.json</span></span>
<span class="line"><span>│       │       │   ├── media</span></span>
<span class="line"><span>│       │       │   │   └── icon.png</span></span>
<span class="line"><span>│       │       │   └── profile</span></span>
<span class="line"><span>│       │       │       └── main_pages.json</span></span>
<span class="line"><span>│       │       ├── en_US</span></span>
<span class="line"><span>│       │       │   └── element</span></span>
<span class="line"><span>│       │       │       └── string.json</span></span>
<span class="line"><span>│       │       ├── rawfile</span></span>
<span class="line"><span>│       │       └── zh_CN</span></span>
<span class="line"><span>│       │           └── element</span></span>
<span class="line"><span>│       │               └── string.json</span></span>
<span class="line"><span>│       └── ohosTest</span></span>
<span class="line"><span>│           ├── ets</span></span>
<span class="line"><span>│           │   ├── test</span></span>
<span class="line"><span>│           │   │   ├── Ability.test.ets</span></span>
<span class="line"><span>│           │   │   └── List.test.ets</span></span>
<span class="line"><span>│           │   ├── testability</span></span>
<span class="line"><span>│           │   │   ├── TestAbility.ets</span></span>
<span class="line"><span>│           │   │   └── pages</span></span>
<span class="line"><span>│           │   │       └── Index.ets</span></span>
<span class="line"><span>│           │   └── testrunner</span></span>
<span class="line"><span>│           │       └── OpenHarmonyTestRunner.ts</span></span>
<span class="line"><span>│           ├── module.json5</span></span>
<span class="line"><span>│           └── resources</span></span>
<span class="line"><span>│               └── base</span></span>
<span class="line"><span>│                   ├── element</span></span>
<span class="line"><span>│                   │   ├── color.json</span></span>
<span class="line"><span>│                   │   └── string.json</span></span>
<span class="line"><span>│                   ├── media</span></span>
<span class="line"><span>│                   │   └── icon.png</span></span>
<span class="line"><span>│                   └── profile</span></span>
<span class="line"><span>│                       └── test_pages.json</span></span>
<span class="line"><span>├── hvigor</span></span>
<span class="line"><span>│   ├── hvigor-config.json5</span></span>
<span class="line"><span>│   └── hvigor-wrapper.js</span></span>
<span class="line"><span>├── hvigorfile.ts</span></span>
<span class="line"><span>├── hvigorw</span></span>
<span class="line"><span>├── hvigorw.bat</span></span>
<span class="line"><span>├── local.properties</span></span>
<span class="line"><span>├── oh-package-lock.json5</span></span>
<span class="line"><span>├── oh-package.json5</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="修改工程配置" tabindex="-1"><a class="header-anchor" href="#修改工程配置"><span>修改工程配置</span></a></h3><p>在模块的entry/build-profile.json5文件中新增<code>napiLibFilterOption</code>和<code>externalNativeOptions</code>配置，防止编译错误和指定支持的abi架构：</p><div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  &quot;apiType&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;stageMode&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  &quot;buildOption&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    &quot;napiLibFilterOption&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">      &quot;enableOverride&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66;">true</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    },</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    &quot;externalNativeOptions&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">      &quot;path&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;./src/main/cpp/CMakeLists.txt&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">      &quot;arguments&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">      &quot;cppFlags&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">      &quot;abiFilters&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: [</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        &quot;armeabi-v7a&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        &quot;arm64-v8a&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        &quot;x86_64&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      ]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  }</span></span>
<span class="line"><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">  ....</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="链接和编译三方库" tabindex="-1"><a class="header-anchor" href="#链接和编译三方库"><span>链接和编译三方库</span></a></h3><p>在<code>cpp/CMakeLists.txt</code>中将第三方动态so库链接到编译环境中，这样就可以在<code>hello.cpp</code>中编译使用了，注意这里和常规的配置也略有不同，需要在<code>target_link_libraries</code>中直接追加动态库地址，不可以仅写lib库名：</p><p>这个case可以成功运行：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span># the minimum version of CMake.</span></span>
<span class="line"><span>cmake_minimum_required(VERSION 3.4.1)</span></span>
<span class="line"><span>project(MyApplication4)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>set(NATIVERENDER_ROOT_PATH \${CMAKE_CURRENT_SOURCE_DIR})</span></span>
<span class="line"><span></span></span>
<span class="line"><span>include_directories(\${NATIVERENDER_ROOT_PATH}</span></span>
<span class="line"><span>                    \${NATIVERENDER_ROOT_PATH}/include)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>add_library(entry SHARED hello.cpp)</span></span>
<span class="line"><span>target_link_libraries(entry PUBLIC libace_napi.z.so \${CMAKE_CURRENT_SOURCE_DIR}/../../../libs/\${OHOS_ARCH}/libtest.so)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这个case可以编译运行但是执行c++代码会崩溃：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span># the minimum version of CMake.</span></span>
<span class="line"><span>cmake_minimum_required(VERSION 3.4.1)</span></span>
<span class="line"><span>project(MyApplication4)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>set(NATIVERENDER_ROOT_PATH \${CMAKE_CURRENT_SOURCE_DIR})</span></span>
<span class="line"><span></span></span>
<span class="line"><span>include_directories(\${NATIVERENDER_ROOT_PATH}</span></span>
<span class="line"><span>                    \${NATIVERENDER_ROOT_PATH}/include)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>add_library( libtest SHARED IMPORTED)</span></span>
<span class="line"><span>set_target_properties(libtest PROPERTIES IMPORTED_LOCATION \${CMAKE_CURRENT_SOURCE_DIR}/../../../libs/\${OHOS_ARCH}/libtest.so )</span></span>
<span class="line"><span></span></span>
<span class="line"><span>add_library(entry SHARED hello.cpp)</span></span>
<span class="line"><span>target_link_libraries(entry PUBLIC libace_napi.z.so libtest)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="在c-代码中引用rust向外暴露的代码并使用" tabindex="-1"><a class="header-anchor" href="#在c-代码中引用rust向外暴露的代码并使用"><span>在C++代码中引用rust向外暴露的代码并使用</span></a></h3><p>先对要使用的代码进行声明：</p><div class="language-c++ line-numbers-mode" data-highlighter="shiki" data-ext="c++" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">extern</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;C&quot;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> hello_from_rust</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">extern</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;C&quot;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> int</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> hello2_from_rust</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> a, </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> b);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>调用<code>hello2_from_rust</code>进行两数相加：</p><div class="language-c++ line-numbers-mode" data-highlighter="shiki" data-ext="c++" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">static</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> napi_value</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> Add</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">napi_env</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> env</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">napi_callback_info</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> info</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> ret </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> hello2_from_rust</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    napi_value ret2;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    napi_create_int32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(env, ret, </span><span style="--shiki-light:#A626A4;--shiki-dark:#56B6C2;">&amp;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">ret2);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> ret2;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>随后，编译运行验证：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>10-23 19:54:01.059  3153-3153    A00000/testTag                 pid-3153                        I  Succeeded in loading the content. Data:</span></span>
<span class="line"><span>10-23 19:54:13.385  3153-3153    A00000/testTag                 com.bzh.test                    I  Test NAPI 2 + 3 = 20</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="reference" tabindex="-1"><a class="header-anchor" href="#reference"><span>Reference</span></a></h2><ul><li>https://doc.rust-lang.org/rustc/platform-support/openharmony.html</li><li>https://docs.openharmony.cn/pages/v4.0/zh-cn/device-dev/subsystems/subsys-build-bindgen-cxx-guide.md/</li><li>https://docs.rust-embedded.org/embedonomicon/custom-target.html</li><li>https://www.saoniuhuo.com/question/detail-2698649.html</li><li>https://blog.csdn.net/zrufo747/article/details/132296829</li><li>https://blog.csdn.net/pengfei240/article/details/52912833</li><li>https://blog.51cto.com/u_15127605/2763424</li></ul>`,67)]))}const k=i(e,[["render",p],["__file","how-to-call-rust-function-from-harmony.html.vue"]]),d=JSON.parse('{"path":"/public-articles/how-to-call-rust-function-from-harmony.html","title":"如何在Harmony Native C++项目中调用Rust库代码","lang":"zh-CN","frontmatter":{"description":"如何在Harmony Native C++项目中调用Rust库代码 主机配置 对Rust库进行交叉编译得到可在HarmonyNext平台运行的产物 工程目录树 我的Rust工程文件目录树如下： 什么是交叉编译 介绍下“交叉编译”的概念 - 所谓\\"交叉编译（Cross_Compile）\\"，是指编译源代码的平台和执行源代码编译后程序的平台是两个不同的平台。...","head":[["meta",{"property":"og:url","content":"https://github.com/biezhihua/public-articles/how-to-call-rust-function-from-harmony.html"}],["meta",{"property":"og:site_name","content":"biezhihua的日常"}],["meta",{"property":"og:title","content":"如何在Harmony Native C++项目中调用Rust库代码"}],["meta",{"property":"og:description","content":"如何在Harmony Native C++项目中调用Rust库代码 主机配置 对Rust库进行交叉编译得到可在HarmonyNext平台运行的产物 工程目录树 我的Rust工程文件目录树如下： 什么是交叉编译 介绍下“交叉编译”的概念 - 所谓\\"交叉编译（Cross_Compile）\\"，是指编译源代码的平台和执行源代码编译后程序的平台是两个不同的平台。..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-03-08T14:25:34.000Z"}],["meta",{"property":"article:modified_time","content":"2025-03-08T14:25:34.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"如何在Harmony Native C++项目中调用Rust库代码\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-03-08T14:25:34.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"别志华\\",\\"url\\":\\"https://github.com/biezhihua\\"}]}"]]},"git":{"createdTime":1697445383000,"updatedTime":1741443934000,"contributors":[{"name":"biezhihua","username":"biezhihua","email":"biezhihua@gmail.com","commits":7,"url":"https://github.com/biezhihua"}]},"readingTime":{"minutes":6.29,"words":1887},"filePathRelative":"public-articles/how-to-call-rust-function-from-harmony.md","localizedDate":"2023年10月16日","excerpt":"","autoDesc":true}');export{k as comp,d as data};
