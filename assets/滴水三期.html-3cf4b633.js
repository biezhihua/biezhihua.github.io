const l=JSON.parse('{"key":"v-07734864","path":"/learn-reverse-engineering/%E6%BB%B4%E6%B0%B4%E4%B8%89%E6%9C%9F.html","title":"滴水三期","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"帮我仿照10进制乘法表和加法表， 写出来8进制和16进制的乘法表和加法表。","slug":"帮我仿照10进制乘法表和加法表-写出来8进制和16进制的乘法表和加法表。","link":"#帮我仿照10进制乘法表和加法表-写出来8进制和16进制的乘法表和加法表。","children":[]},{"level":2,"title":"一、8 进制（Octal）加法表","slug":"一、8-进制-octal-加法表","link":"#一、8-进制-octal-加法表","children":[]},{"level":2,"title":"二、8 进制（Octal）乘法表","slug":"二、8-进制-octal-乘法表","link":"#二、8-进制-octal-乘法表","children":[]},{"level":2,"title":"三、16 进制（Hexadecimal）加法表","slug":"三、16-进制-hexadecimal-加法表","link":"#三、16-进制-hexadecimal-加法表","children":[]},{"level":2,"title":"四、16 进制（Hexadecimal）乘法表","slug":"四、16-进制-hexadecimal-乘法表","link":"#四、16-进制-hexadecimal-乘法表","children":[{"level":3,"title":"帮我写一个十六进制映射2进制的表。","slug":"帮我写一个十六进制映射2进制的表。","link":"#帮我写一个十六进制映射2进制的表。","children":[]},{"level":3,"title":"说明：","slug":"说明","link":"#说明","children":[]}]},{"level":2,"title":"CMP EBP,ESP","slug":"cmp-ebp-esp","link":"#cmp-ebp-esp","children":[{"level":3,"title":"1. 指令功能","slug":"_1-指令功能","link":"#_1-指令功能","children":[]},{"level":3,"title":"2. 典型使用场景","slug":"_2-典型使用场景","link":"#_2-典型使用场景","children":[]},{"level":3,"title":"3. 标志位变化","slug":"_3-标志位变化","link":"#_3-标志位变化","children":[]},{"level":3,"title":"4. 底层原理","slug":"_4-底层原理","link":"#_4-底层原理","children":[]},{"level":3,"title":"5. 扩展应用","slug":"_5-扩展应用","link":"#_5-扩展应用","children":[]},{"level":3,"title":"总结","slug":"总结","link":"#总结","children":[]}]},{"level":2,"title":"帮我列举类似JNZ SHORT StackDemo.00401123语法的指令，并给我一些Demo。","slug":"帮我列举类似jnz-short-stackdemo-00401123语法的指令-并给我一些demo。","link":"#帮我列举类似jnz-short-stackdemo-00401123语法的指令-并给我一些demo。","children":[{"level":3,"title":"类似 JNZ SHORT StackDemo.00401123 的指令语法","slug":"类似-jnz-short-stackdemo-00401123-的指令语法","link":"#类似-jnz-short-stackdemo-00401123-的指令语法","children":[]},{"level":3,"title":"1. 条件跳转指令","slug":"_1-条件跳转指令","link":"#_1-条件跳转指令","children":[]},{"level":3,"title":"2. 原文来源","slug":"_2-原文来源","link":"#_2-原文来源","children":[]},{"level":3,"title":"3. 示例代码","slug":"_3-示例代码","link":"#_3-示例代码","children":[]},{"level":3,"title":"4. 关键点说明","slug":"_4-关键点说明","link":"#_4-关键点说明","children":[]},{"level":3,"title":"5. 实际应用场景","slug":"_5-实际应用场景","link":"#_5-实际应用场景","children":[]},{"level":3,"title":"总结","slug":"总结-1","link":"#总结-1","children":[]}]},{"level":2,"title":"RAX / RBX / RCX / RDX / RSI / RDI / R8 / R9 / R10 / R11 / R12 / R13 / R14 / R15","slug":"rax-rbx-rcx-rdx-rsi-rdi-r8-r9-r10-r11-r12-r13-r14-r15","link":"#rax-rbx-rcx-rdx-rsi-rdi-r8-r9-r10-r11-r12-r13-r14-r15","children":[]},{"level":2,"title":"如何运用这些信息","slug":"如何运用这些信息","link":"#如何运用这些信息","children":[]},{"level":2,"title":"RAX 是 64位 和 EAX 是32位， 他们中的R和E是什么意思。","slug":"rax-是-64位-和-eax-是32位-他们中的r和e是什么意思。","link":"#rax-是-64位-和-eax-是32位-他们中的r和e是什么意思。","children":[]},{"level":2,"title":"帮我列出所有的16位CPU、32位CPU、64位CPU中的通用寄存器","slug":"帮我列出所有的16位cpu、32位cpu、64位cpu中的通用寄存器","link":"#帮我列出所有的16位cpu、32位cpu、64位cpu中的通用寄存器","children":[{"level":3,"title":"1. 16位模式（16-bit CPU）","slug":"_1-16位模式-16-bit-cpu","link":"#_1-16位模式-16-bit-cpu","children":[]},{"level":3,"title":"2. 32位模式（32-bit CPU）","slug":"_2-32位模式-32-bit-cpu","link":"#_2-32位模式-32-bit-cpu","children":[]},{"level":3,"title":"3. 64位模式（64-bit CPU）","slug":"_3-64位模式-64-bit-cpu","link":"#_3-64位模式-64-bit-cpu","children":[]},{"level":3,"title":"总结","slug":"总结-2","link":"#总结-2","children":[]}]},{"level":2,"title":"你将扮演一个逆向工程专家，请从零教授我逆向工程相关的知识，帮我建立知识体系，由浅入深的学习。","slug":"你将扮演一个逆向工程专家-请从零教授我逆向工程相关的知识-帮我建立知识体系-由浅入深的学习。","link":"#你将扮演一个逆向工程专家-请从零教授我逆向工程相关的知识-帮我建立知识体系-由浅入深的学习。","children":[{"level":3,"title":"思考过程","slug":"思考过程","link":"#思考过程","children":[]},{"level":3,"title":"开始","slug":"开始","link":"#开始","children":[]},{"level":3,"title":"阶段1：基础准备（1-2周）","slug":"阶段1-基础准备-1-2周","link":"#阶段1-基础准备-1-2周","children":[]},{"level":3,"title":"阶段2：汇编语言与程序执行流程（2-4周）","slug":"阶段2-汇编语言与程序执行流程-2-4周","link":"#阶段2-汇编语言与程序执行流程-2-4周","children":[]},{"level":3,"title":"阶段3：静态分析技术（3-5周）","slug":"阶段3-静态分析技术-3-5周","link":"#阶段3-静态分析技术-3-5周","children":[]},{"level":3,"title":"阶段4：动态调试与漏洞分析（4-6周）","slug":"阶段4-动态调试与漏洞分析-4-6周","link":"#阶段4-动态调试与漏洞分析-4-6周","children":[]},{"level":3,"title":"阶段5：高级逆向技术（5-8周）","slug":"阶段5-高级逆向技术-5-8周","link":"#阶段5-高级逆向技术-5-8周","children":[]},{"level":3,"title":"阶段6：实战与扩展（持续学习）","slug":"阶段6-实战与扩展-持续学习","link":"#阶段6-实战与扩展-持续学习","children":[]},{"level":3,"title":"学习建议","slug":"学习建议","link":"#学习建议","children":[]}]},{"level":2,"title":"你将扮演一个逆向工程专家，请从零教授我逆向工程相关的知识，帮我建立知识体系，由浅入深的学习。","slug":"你将扮演一个逆向工程专家-请从零教授我逆向工程相关的知识-帮我建立知识体系-由浅入深的学习。-1","link":"#你将扮演一个逆向工程专家-请从零教授我逆向工程相关的知识-帮我建立知识体系-由浅入深的学习。-1","children":[]},{"level":2,"title":"第一部分：逆向工程的概念与基础","slug":"第一部分-逆向工程的概念与基础","link":"#第一部分-逆向工程的概念与基础","children":[{"level":3,"title":"1. 什么是逆向工程","slug":"_1-什么是逆向工程","link":"#_1-什么是逆向工程","children":[]},{"level":3,"title":"2. 为什么要学逆向工程","slug":"_2-为什么要学逆向工程","link":"#_2-为什么要学逆向工程","children":[]},{"level":3,"title":"3. 相关基础知识","slug":"_3-相关基础知识","link":"#_3-相关基础知识","children":[]}]},{"level":2,"title":"第二部分：逆向工程工具与环境搭建","slug":"第二部分-逆向工程工具与环境搭建","link":"#第二部分-逆向工程工具与环境搭建","children":[{"level":3,"title":"1. 常用工具概览","slug":"_1-常用工具概览","link":"#_1-常用工具概览","children":[]},{"level":3,"title":"2. 环境搭建","slug":"_2-环境搭建","link":"#_2-环境搭建","children":[]}]},{"level":2,"title":"第三部分：静态分析","slug":"第三部分-静态分析","link":"#第三部分-静态分析","children":[{"level":3,"title":"1. 文件格式与装载","slug":"_1-文件格式与装载","link":"#_1-文件格式与装载","children":[]},{"level":3,"title":"2. 反汇编基础","slug":"_2-反汇编基础","link":"#_2-反汇编基础","children":[]},{"level":3,"title":"3. 从汇编到源码结构","slug":"_3-从汇编到源码结构","link":"#_3-从汇编到源码结构","children":[]}]},{"level":2,"title":"第四部分：动态调试与运行时分析","slug":"第四部分-动态调试与运行时分析","link":"#第四部分-动态调试与运行时分析","children":[{"level":3,"title":"1. 断点与内存监控","slug":"_1-断点与内存监控","link":"#_1-断点与内存监控","children":[]},{"level":3,"title":"2. 调试进阶","slug":"_2-调试进阶","link":"#_2-调试进阶","children":[]}]},{"level":2,"title":"第五部分：综合应用与进阶主题","slug":"第五部分-综合应用与进阶主题","link":"#第五部分-综合应用与进阶主题","children":[{"level":3,"title":"1. 逆向典型案例","slug":"_1-逆向典型案例","link":"#_1-逆向典型案例","children":[]},{"level":3,"title":"2. 反混淆与反加壳","slug":"_2-反混淆与反加壳","link":"#_2-反混淆与反加壳","children":[]},{"level":3,"title":"3. 二进制漏洞挖掘","slug":"_3-二进制漏洞挖掘","link":"#_3-二进制漏洞挖掘","children":[]}]},{"level":2,"title":"第六部分：学习资料与实战建议","slug":"第六部分-学习资料与实战建议","link":"#第六部分-学习资料与实战建议","children":[]},{"level":2,"title":"总结","slug":"总结-3","link":"#总结-3","children":[]},{"level":2,"title":"C语言中float如何存储成二进制的，请举一些例子给我。","slug":"c语言中float如何存储成二进制的-请举一些例子给我。","link":"#c语言中float如何存储成二进制的-请举一些例子给我。","children":[]},{"level":2,"title":"1. 1.0 的存储","slug":"_1-1-0-的存储","link":"#_1-1-0-的存储","children":[{"level":3,"title":"分析步骤","slug":"分析步骤","link":"#分析步骤","children":[]},{"level":3,"title":"结果","slug":"结果","link":"#结果","children":[]}]},{"level":2,"title":"2. 0.5 的存储","slug":"_2-0-5-的存储","link":"#_2-0-5-的存储","children":[{"level":3,"title":"分析步骤","slug":"分析步骤-1","link":"#分析步骤-1","children":[]},{"level":3,"title":"结果","slug":"结果-1","link":"#结果-1","children":[]}]},{"level":2,"title":"3. 2.5 的存储","slug":"_3-2-5-的存储","link":"#_3-2-5-的存储","children":[{"level":3,"title":"分析步骤","slug":"分析步骤-2","link":"#分析步骤-2","children":[]},{"level":3,"title":"结果","slug":"结果-2","link":"#结果-2","children":[]}]},{"level":2,"title":"4. 0.1 的存储","slug":"_4-0-1-的存储","link":"#_4-0-1-的存储","children":[]},{"level":2,"title":"5. 一般存储格式小结","slug":"_5-一般存储格式小结","link":"#_5-一般存储格式小结","children":[]},{"level":2,"title":"6. 代码示例（查看存储）","slug":"_6-代码示例-查看存储","link":"#_6-代码示例-查看存储","children":[]},{"level":2,"title":"总结","slug":"总结-4","link":"#总结-4","children":[]},{"level":2,"title":"C语言switch语法在汇编角度对比if语句，有何优势， 是如何生成的。","slug":"c语言switch语法在汇编角度对比if语句-有何优势-是如何生成的。","link":"#c语言switch语法在汇编角度对比if语句-有何优势-是如何生成的。","children":[]},{"level":2,"title":"1. switch 的典型汇编实现方式","slug":"_1-switch-的典型汇编实现方式","link":"#_1-switch-的典型汇编实现方式","children":[]},{"level":2,"title":"2. 相比多重 if-else if 的优势","slug":"_2-相比多重-if-else-if-的优势","link":"#_2-相比多重-if-else-if-的优势","children":[]},{"level":2,"title":"3. 具体的汇编生成示例（以跳转表为例）","slug":"_3-具体的汇编生成示例-以跳转表为例","link":"#_3-具体的汇编生成示例-以跳转表为例","children":[]},{"level":2,"title":"4. 总结","slug":"_4-总结","link":"#_4-总结","children":[]},{"level":2,"title":"C语言中，如何从编译器角度和汇编角度理解指针？","slug":"c语言中-如何从编译器角度和汇编角度理解指针","link":"#c语言中-如何从编译器角度和汇编角度理解指针","children":[{"level":3,"title":"一、编译器视角下的指针","slug":"一、编译器视角下的指针","link":"#一、编译器视角下的指针","children":[]},{"level":3,"title":"二、汇编视角下的指针","slug":"二、汇编视角下的指针","link":"#二、汇编视角下的指针","children":[]},{"level":3,"title":"三、关键汇编模式总结","slug":"三、关键汇编模式总结","link":"#三、关键汇编模式总结","children":[]},{"level":3,"title":"四、深层理解","slug":"四、深层理解","link":"#四、深层理解","children":[]},{"level":3,"title":"五、总结","slug":"五、总结","link":"#五、总结","children":[]}]},{"level":2,"title":"地址运算时，编译器为什么要根据指针类型自动调整偏移量，如何实现的？","slug":"地址运算时-编译器为什么要根据指针类型自动调整偏移量-如何实现的","link":"#地址运算时-编译器为什么要根据指针类型自动调整偏移量-如何实现的","children":[{"level":3,"title":"一、为什么需要根据类型调整偏移量？","slug":"一、为什么需要根据类型调整偏移量","link":"#一、为什么需要根据类型调整偏移量","children":[]},{"level":3,"title":"二、编译器如何实现偏移量调整？","slug":"二、编译器如何实现偏移量调整","link":"#二、编译器如何实现偏移量调整","children":[]},{"level":3,"title":"三、具体示例分析","slug":"三、具体示例分析","link":"#三、具体示例分析","children":[]},{"level":3,"title":"四、深层原理总结","slug":"四、深层原理总结","link":"#四、深层原理总结","children":[]},{"level":3,"title":"五、扩展思考","slug":"五、扩展思考","link":"#五、扩展思考","children":[]}]},{"level":2,"title":"C语言中，结构体对齐填充的规则，从编译器和汇编角度为我解答。","slug":"c语言中-结构体对齐填充的规则-从编译器和汇编角度为我解答。","link":"#c语言中-结构体对齐填充的规则-从编译器和汇编角度为我解答。","children":[{"level":3,"title":"一、结构体对齐的底层原因","slug":"一、结构体对齐的底层原因","link":"#一、结构体对齐的底层原因","children":[]},{"level":3,"title":"二、编译器视角下的对齐规则","slug":"二、编译器视角下的对齐规则","link":"#二、编译器视角下的对齐规则","children":[]},{"level":3,"title":"三、汇编视角下的结构体布局","slug":"三、汇编视角下的结构体布局","link":"#三、汇编视角下的结构体布局","children":[]},{"level":3,"title":"四、编译器如何实现填充？","slug":"四、编译器如何实现填充","link":"#四、编译器如何实现填充","children":[]},{"level":3,"title":"五、关键规则总结","slug":"五、关键规则总结","link":"#五、关键规则总结","children":[]},{"level":3,"title":"六、示例分析","slug":"六、示例分析","link":"#六、示例分析","children":[]},{"level":3,"title":"七、深层理解","slug":"七、深层理解","link":"#七、深层理解","children":[]}]},{"level":2,"title":"C语言中，指针的本质是什么？  如何区分  int (p)[5] 和int p?","slug":"c语言中-指针的本质是什么-如何区分-int-p-5-和int-p","link":"#c语言中-指针的本质是什么-如何区分-int-p-5-和int-p","children":[{"level":3,"title":"一、指针的本质","slug":"一、指针的本质","link":"#一、指针的本质","children":[]},{"level":3,"title":"二、int (*p)[5] 与 int *p 的对比","slug":"二、int-p-5-与-int-p-的对比","link":"#二、int-p-5-与-int-p-的对比","children":[]},{"level":3,"title":"三、关键区别总结","slug":"三、关键区别总结","link":"#三、关键区别总结","children":[]},{"level":3,"title":"四、示例代码验证","slug":"四、示例代码验证","link":"#四、示例代码验证","children":[]},{"level":3,"title":"五、为什么需要区分？","slug":"五、为什么需要区分","link":"#五、为什么需要区分","children":[]}]}],"git":{"createdTime":1738931457000,"updatedTime":1739718985000,"contributors":[{"name":"biezhihua","email":"biezhihua@gmail.com","commits":4}]},"readingTime":{"minutes":52.94,"words":15881},"filePathRelative":"learn-reverse-engineering/滴水三期.md","localizedDate":"2025年2月7日","excerpt":""}');export{l as data};
