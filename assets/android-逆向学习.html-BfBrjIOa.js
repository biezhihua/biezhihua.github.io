import{_ as r}from"./plugin-vue_export-helper-DlAUqK2U.js";import{e as i,g as e,h as t,o}from"./app-BC9YFojH.js";const n={};function d(h,a){return o(),i("div",null,a[0]||(a[0]=[e("h1",{id:"android-逆向",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#android-逆向"},[e("span",null,"android 逆向")])],-1),e("p",null,[t("Android逆向这个方向有不少独立开发者，其技术栈总结如下：1，开发语言：Java/JNI/C/C++,ArmV7/V8汇编（指令集，栈平衡，过程调用规范），Smali语法。2，编译原理：LLVM，Proguard/R8, C/C++语言内存模型，编译优化。3，文件结构：DEX文件结构、ART的运行机制；ELF（so）文件结构，Linker加载、链接so机制。4，Linux操作系统：进程管理，内存管理，文件系统，IO设备驱动，系统调用。5，Android 运行机制：主要在FW层，如AMS、PMS，WMS，Binder，权限管理。6， 反编译工具：Jadx-gui，apktool，DEX2Jar，Jeb，IDApro，Ghidra，Radare2，Binary Ninja，模拟执行用的unicorn，unidbg。 7，抓包分析工具：Charles、Fiddler、Wireshark 、 Burpsuite、r0capture、mitmproxy、httpcanary，tcpdump（Postman、Curl、firebug/ httpwatch，测试调试用）。 8，通讯协议&加密算法：Http/Https,WebSocket,Tcp/IP,TLS,SSL,Socket;Gson/Protobuf/Xml;DES,AES,RC4,SM4,RSA,ECC；MD5，Base64，Sha-1/Sha-256;及各变种算法。 9,代码对抗技术：字符串/代码/资源的混淆、加密，Java2C，花指令，OLLVM，VMP等。 10,HOOK框架：Xposed/Lposed/Exposed, Frida HOOK/Trace/Stalker, Sandhook,xHook等。需要对抗的技术点：反调试，反内存dump/patch，反hook，反二次打包，手机环境检测（root，模拟器，云手机等），程序/数据/资源的完整性检查，网络抓包检测等。"),e("img",{src:"https://pic4.zhimg.com/v2-f5acf62e9415ea79fcb75e0e6303a245_b.jpg","data-size":"normal","data-rawwidth":"13194","data-rawheight":"6231","data-original-token":"v2-f5acf62e9415ea79fcb75e0e6303a245","data-default-watermark-src":"https://pic2.zhimg.com/v2-12a9688c00be555b3dc6929344dfee51_b.jpg",class:"origin_image zh-lightbox-thumb",width:"13194","data-original":"https://pic4.zhimg.com/v2-f5acf62e9415ea79fcb75e0e6303a245_r.jpg"}),t("Android逆向技术栈需要指出的是，看起来技术蛮多，但并不是要掌握所有的技术才能挣钱，根据业务选择需要的技术即可。其中最难的部分当属各种版本的VMP+OLLVM了。")],-1)]))}const p=r(n,[["render",d],["__file","android-逆向学习.html.vue"]]),s=JSON.parse('{"path":"/learn-reverse-engineering/android-%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0.html","title":"android 逆向","lang":"zh-CN","frontmatter":{"description":"android 逆向 Android逆向这个方向有不少独立开发者，其技术栈总结如下：1，开发语言：Java/JNI/C/C++,ArmV7/V8汇编（指令集，栈平衡，过程调用规范），Smali语法。2，编译原理：LLVM，Proguard/R8, C/C++语言内存模型，编译优化。3，文件结构：DEX文件结构、ART的运行机制；ELF（so）文件结构，...","head":[["meta",{"property":"og:url","content":"https://github.com/biezhihua/learn-reverse-engineering/android-%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0.html"}],["meta",{"property":"og:site_name","content":"biezhihua的日常"}],["meta",{"property":"og:title","content":"android 逆向"}],["meta",{"property":"og:description","content":"android 逆向 Android逆向这个方向有不少独立开发者，其技术栈总结如下：1，开发语言：Java/JNI/C/C++,ArmV7/V8汇编（指令集，栈平衡，过程调用规范），Smali语法。2，编译原理：LLVM，Proguard/R8, C/C++语言内存模型，编译优化。3，文件结构：DEX文件结构、ART的运行机制；ELF（so）文件结构，..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-03-08T14:25:34.000Z"}],["meta",{"property":"article:modified_time","content":"2025-03-08T14:25:34.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"android 逆向\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-03-08T14:25:34.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"别志华\\",\\"url\\":\\"https://github.com/biezhihua\\"}]}"]]},"git":{"createdTime":1736328921000,"updatedTime":1741443934000,"contributors":[{"name":"zhihua.bzh","username":"zhihua.bzh","email":"zhihua.bzh@alibaba-inc.com","commits":1,"url":"https://github.com/zhihua.bzh"},{"name":"biezhihua","username":"biezhihua","email":"biezhihua@gmail.com","commits":2,"url":"https://github.com/biezhihua"}]},"readingTime":{"minutes":1.42,"words":425},"filePathRelative":"learn-reverse-engineering/android-逆向学习.md","localizedDate":"2025年1月8日","excerpt":"","autoDesc":true}');export{p as comp,s as data};
