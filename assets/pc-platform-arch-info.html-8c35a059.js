import{_ as i,Y as e,Z as n,a2 as c}from"./framework-301d0703.js";const o={},a=c('<h1 id="pc-platform-arch-info" tabindex="-1"><a class="header-anchor" href="#pc-platform-arch-info" aria-hidden="true">#</a> PC Platform Arch Info</h1><p>操作平台的架构信息通常由几个部分组成，包括CPU架构、供应商、操作系统和ABI（应用程序二进制接口）。以 <code>x86_64-pc-windows-gnu</code> 为例：</p><ul><li><code>x86_64</code>：CPU架构。这里指的是64位的x86架构（也称为AMD64或Intel 64）。</li><li><code>pc</code>：供应商。在这个上下文中，它通常表示通用个人电脑。</li><li><code>windows</code>：操作系统。</li><li><code>gnu</code>：ABI。这里指的是使用GNU工具链（如GCC编译器）。</li></ul><p>这样的架构信息标识符广泛用于交叉编译场景和系统编程中，以区分不同的操作平台和编译目标。下面是一些常见平台的架构信息示例：</p><h3 id="windows" tabindex="-1"><a class="header-anchor" href="#windows" aria-hidden="true">#</a> Windows</h3><ul><li><code>x86_64-pc-windows-msvc</code>：Windows 上的 64 位 x86 架构，使用 Microsoft Visual C++ (MSVC) 编译器。</li><li><code>i686-pc-windows-msvc</code>：Windows 上的 32 位 x86 架构（也称为 x86 或 i386），使用 MSVC 编译器。</li><li><code>i686-pc-windows-gnu</code>：Windows 上的 32 位 x86 架构，使用 GNU 工具链。</li></ul><h3 id="linux" tabindex="-1"><a class="header-anchor" href="#linux" aria-hidden="true">#</a> Linux</h3><ul><li><code>x86_64-unknown-linux-gnu</code>：Linux 上的 64 位 x86 架构，使用 GNU 工具链。</li><li><code>i686-unknown-linux-gnu</code>：Linux 上的 32 位 x86 架构，使用 GNU 工具链。</li><li><code>arm-unknown-linux-gnueabihf</code>：Linux 上的 ARM 架构，使用硬浮点 ABI。</li></ul><h3 id="macos-苹果" tabindex="-1"><a class="header-anchor" href="#macos-苹果" aria-hidden="true">#</a> macOS（苹果）</h3><ul><li><code>x86_64-apple-darwin</code>：macOS 上的 64 位 x86 架构。</li><li><code>aarch64-apple-darwin</code>：macOS 上的 ARM64 架构（例如，搭载 Apple M1 芯片的设备）。</li></ul><h3 id="其他" tabindex="-1"><a class="header-anchor" href="#其他" aria-hidden="true">#</a> 其他</h3><ul><li><code>aarch64-unknown-linux-gnu</code>：Linux 上的 ARM64 架构。</li><li><code>armv7-unknown-linux-gnueabihf</code>：Linux 上的 ARMv7 架构，通常用于较旧的 ARM 设备。</li></ul><p>每个组件都提供了特定的信息，有助于准确地识别目标平台和所需的编译或运行时配置。在交叉编译或者配置编译目标时，这些信息尤为重要。</p>',13),d=[a];function l(r,u){return e(),n("div",null,d)}const s=i(o,[["render",l],["__file","pc-platform-arch-info.html.vue"]]);export{s as default};
