import{_ as o}from"./plugin-vue_export-helper-DlAUqK2U.js";import{e as a,f as i,o as d}from"./app-C6SdGSfv.js";const l={};function t(c,e){return d(),a("div",null,e[0]||(e[0]=[i('<h1 id="gralde-common-command" tabindex="-1"><a class="header-anchor" href="#gralde-common-command"><span>Gralde Common Command</span></a></h1><p>在 Gradle 中，用于依赖管理的关键字有几个，主要用于配置项目中库的依赖关系。随着 Gradle 版本的更新，某些术语已经被新的替换或者有了更加明确的用途。以下是一些常用的依赖配置关键字及其作用：</p><h3 id="_1-compile-已废弃" tabindex="-1"><a class="header-anchor" href="#_1-compile-已废弃"><span>1. <code>compile</code> (已废弃)</span></a></h3><ul><li><strong>用途</strong>：<code>compile</code> 是旧版 Gradle 中用来添加库依赖的。被依赖的库会参与到编译、运行时的类路径中。</li><li><strong>问题</strong>：它不区分编译时和运行时依赖，所有依赖都会被打包进最终构建的 APK 或 JAR 中，可能导致不必要的库膨胀。</li></ul><h3 id="_2-api-替代-compile" tabindex="-1"><a class="header-anchor" href="#_2-api-替代-compile"><span>2. <code>api</code> (替代 <code>compile</code>)</span></a></h3><ul><li><strong>用途</strong>：在 Android Gradle 插件 3.0 以上使用。当你的库在公共 API 中暴露了其他模块的类型时使用。依赖传递给消费者。</li><li><strong>特点</strong>：对于库模块，如果一个依赖是通过 <code>api</code> 配置的，那么这个依赖会出现在库的使用者的编译路径上。</li></ul><h3 id="_3-implementation-替代-compile" tabindex="-1"><a class="header-anchor" href="#_3-implementation-替代-compile"><span>3. <code>implementation</code> (替代 <code>compile</code>)</span></a></h3><ul><li><strong>用途</strong>：推荐用来替换 <code>compile</code>。它只会将库包含在编译类路径中，不会暴露给消费者。</li><li><strong>特点</strong>：这意味着使用 <code>implementation</code> 声明的依赖不会被传递给依赖项的消费者。这有助于减少模块间的耦合，并可能减少编译时间。</li></ul><h3 id="_4-compileonly-类似于-maven-的-provided" tabindex="-1"><a class="header-anchor" href="#_4-compileonly-类似于-maven-的-provided"><span>4. <code>compileOnly</code> (类似于 Maven 的 <code>provided</code>)</span></a></h3><ul><li><strong>用途</strong>：只在编译时有效，运行时无效。适用于只需要在编译时期参与编译的库，比如注解处理器。</li><li><strong>特点</strong>：运行时需要保证这些依赖由环境提供，常用于插件或容器提供的 API。</li></ul><h3 id="_5-providedcompile-已废弃" tabindex="-1"><a class="header-anchor" href="#_5-providedcompile-已废弃"><span>5. <code>providedCompile</code> (已废弃)</span></a></h3><ul><li><strong>用途</strong>：旧版 Gradle 中的用法，类似于 <code>compileOnly</code>，用于指定编译时需要，但不打包到最终产物中的依赖。</li><li><strong>问题</strong>：随着 Gradle 版本的升级，通常被 <code>compileOnly</code> 替代。</li></ul><h3 id="_6-provided-已废弃" tabindex="-1"><a class="header-anchor" href="#_6-provided-已废弃"><span>6. <code>provided</code> (已废弃)</span></a></h3><ul><li><strong>用途</strong>：类似于 <code>providedCompile</code>，旧的依赖管理方式，现在通常使用 <code>compileOnly</code>。</li></ul><h3 id="总结" tabindex="-1"><a class="header-anchor" href="#总结"><span>总结：</span></a></h3><ul><li>使用 <code>api</code> 和 <code>implementation</code> 来替代老的 <code>compile</code>，具体选择取决于是否想将依赖的库暴露给消费者。</li><li>使用 <code>compileOnly</code> 替代 <code>providedCompile</code> 和 <code>provided</code>，用于那些仅在编译时需要而运行时由执行环境提供的库。</li></ul>',16)]))}const m=o(l,[["render",t],["__file","gradle-commonh-command.html.vue"]]),p=JSON.parse('{"path":"/public-articles/gradle-commonh-command.html","title":"Gralde Common Command","lang":"zh-CN","frontmatter":{"description":"Gralde Common Command 在 Gradle 中，用于依赖管理的关键字有几个，主要用于配置项目中库的依赖关系。随着 Gradle 版本的更新，某些术语已经被新的替换或者有了更加明确的用途。以下是一些常用的依赖配置关键字及其作用： 1. compile (已废弃) 用途：compile 是旧版 Gradle 中用来添加库依赖的。被依赖的库...","head":[["meta",{"property":"og:url","content":"https://github.com/biezhihua/public-articles/gradle-commonh-command.html"}],["meta",{"property":"og:site_name","content":"biezhihua的日常"}],["meta",{"property":"og:title","content":"Gralde Common Command"}],["meta",{"property":"og:description","content":"Gralde Common Command 在 Gradle 中，用于依赖管理的关键字有几个，主要用于配置项目中库的依赖关系。随着 Gradle 版本的更新，某些术语已经被新的替换或者有了更加明确的用途。以下是一些常用的依赖配置关键字及其作用： 1. compile (已废弃) 用途：compile 是旧版 Gradle 中用来添加库依赖的。被依赖的库..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-03-08T14:25:34.000Z"}],["meta",{"property":"article:modified_time","content":"2025-03-08T14:25:34.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Gralde Common Command\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-03-08T14:25:34.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"别志华\\",\\"url\\":\\"https://github.com/biezhihua\\"}]}"]]},"git":{"createdTime":1721182179000,"updatedTime":1741443934000,"contributors":[{"name":"biezhihua","username":"biezhihua","email":"biezhihua@gmail.com","commits":2,"url":"https://github.com/biezhihua"}]},"readingTime":{"minutes":1.88,"words":564},"filePathRelative":"public-articles/gradle-commonh-command.md","localizedDate":"2024年7月17日","excerpt":"","autoDesc":true}');export{m as comp,p as data};
