import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{e as a,f as n,o as l}from"./app-v__Abch_.js";const e={};function t(h,i){return l(),a("div",null,i[0]||(i[0]=[n(`<h1 id="systemfirmwaretable" tabindex="-1"><a class="header-anchor" href="#systemfirmwaretable"><span>SystemFirmwareTable</span></a></h1><h3 id="什么是-systemfirmwaretable" tabindex="-1"><a class="header-anchor" href="#什么是-systemfirmwaretable"><span><strong>什么是 <code>SystemFirmwareTable</code>？</strong></span></a></h3><p><code>SystemFirmwareTable</code> 是一个与系统固件（BIOS 或 UEFI）相关的 Windows API 函数，用于访问系统固件提供的数据。它位于 Windows 的 <strong>Kernel32.dll</strong> 中，通常用于检索存储在固件中的特定信息，例如 ACPI 表、SMBIOS 数据、FIRMWARE TABLE 信息等。</p><p>在编程时，通过 <code>SystemFirmwareTable</code> 函数可以读取系统固件提供的特定表数据，开发者可以用它来获取硬件相关的信息。</p><hr><h3 id="函数原型" tabindex="-1"><a class="header-anchor" href="#函数原型"><span><strong>函数原型</strong></span></a></h3><div class="language-c line-numbers-mode" data-highlighter="shiki" data-ext="c" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">UINT </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">GetSystemFirmwareTable</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">  DWORD </span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">FirmwareTableProviderSignature</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">  DWORD </span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">FirmwareTableID</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">  PVOID </span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">pFirmwareTableBuffer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">  DWORD BufferSize</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="参数说明" tabindex="-1"><a class="header-anchor" href="#参数说明"><span>参数说明：</span></a></h4><ol><li><p><strong><code>FirmwareTableProviderSignature</code></strong>:</p><ul><li>表示固件表提供者的签名，例如： <ul><li><strong>&#39;ACPI&#39;</strong>：高级配置和电源接口（ACPI）表。</li><li><strong>&#39;RSMB&#39;</strong>：系统管理 BIOS（SMBIOS）表。</li></ul></li><li>这些签名是 4 字节的字符串，通常写为字符常量（如 <code>&#39;ACPI&#39;</code>）。</li></ul></li><li><p><strong><code>FirmwareTableID</code></strong>:</p><ul><li>表示要检索的特定固件表的 ID。例如，ACPI 表中的 &quot;DSDT&quot; 或 &quot;FACP&quot;。</li></ul></li><li><p><strong><code>pFirmwareTableBuffer</code></strong>:</p><ul><li>指向接收表数据的缓冲区。如果设置为 <code>NULL</code>，则函数会返回所需缓冲区的大小。</li></ul></li><li><p><strong><code>BufferSize</code></strong>:</p><ul><li>表示 <code>pFirmwareTableBuffer</code> 缓冲区的大小。如果缓冲区太小，函数会返回所需的大小。</li></ul></li></ol><h4 id="返回值" tabindex="-1"><a class="header-anchor" href="#返回值"><span>返回值：</span></a></h4><ul><li>如果 <code>pFirmwareTableBuffer</code> 为 <code>NULL</code>，返回表数据所需的缓冲区大小。</li><li>如果调用成功，返回的是实际写入缓冲区的字节数。</li><li>如果调用失败，返回值为 0。</li></ul><hr><h3 id="作用和用途" tabindex="-1"><a class="header-anchor" href="#作用和用途"><span><strong>作用和用途</strong></span></a></h3><ol><li><p><strong>获取硬件信息</strong>：</p><ul><li>可以获取固件中存储的详细硬件信息，例如 CPU 支持的功能、内存布局等。</li></ul></li><li><p><strong>系统管理</strong>：</p><ul><li>系统管理员可以使用该 API 检查 BIOS/UEFI 中是否包含特定的表，从而获取硬件配置或调试信息。</li></ul></li><li><p><strong>ACPI 表访问</strong>：</p><ul><li>ACPI 表中包含许多关于电源管理和硬件接口的信息，例如： <ul><li><code>DSDT</code>：差异化系统描述表。</li><li><code>FACP</code>：固定 ACPI 描述表。</li></ul></li><li>通过访问 ACPI 表，可以实现更深层次的硬件控制。</li></ul></li><li><p><strong>BIOS/UEFI 调试</strong>：</p><ul><li>调试工具可以通过该函数检查固件数据是否符合预期，例如验证 SMBIOS 是否正确存储了系统序列号。</li></ul></li><li><p><strong>固件更新支持</strong>：</p><ul><li>固件提供的数据可以用来辅助设计安全的固件更新流程。</li></ul></li></ol><hr><h3 id="常见使用场景" tabindex="-1"><a class="header-anchor" href="#常见使用场景"><span><strong>常见使用场景</strong></span></a></h3><h4 id="获取所有可用的固件表签名" tabindex="-1"><a class="header-anchor" href="#获取所有可用的固件表签名"><span><strong>获取所有可用的固件表签名</strong></span></a></h4><p>可以使用 <code>EnumSystemFirmwareTables</code> 函数列出所有支持的固件表签名，然后通过 <code>SystemFirmwareTable</code> 获取具体内容。</p><div class="language-c line-numbers-mode" data-highlighter="shiki" data-ext="c" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">#include</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &lt;windows.h&gt;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">#include</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &lt;stdio.h&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> ListFirmwareTables</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">() {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    DWORD bufferSize </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> EnumSystemFirmwareTables</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;ACPI&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">NULL</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (bufferSize </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">==</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        printf</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Failed to enumerate firmware tables.</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    char*</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> tableSignatures </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">char*</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">malloc</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(bufferSize);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">EnumSystemFirmwareTables</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;ACPI&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, tableSignatures, bufferSize)) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (DWORD i </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; i </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> bufferSize; i </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">+=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">            printf</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;ACPI Table: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">%.4s</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">&amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">tableSignatures</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[i]);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    free</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(tableSignatures);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">int</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">() {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    ListFirmwareTables</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    return</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="读取特定的-acpi-表" tabindex="-1"><a class="header-anchor" href="#读取特定的-acpi-表"><span><strong>读取特定的 ACPI 表</strong></span></a></h4><p>以下代码示例读取指定的 ACPI 表：</p><div class="language-c line-numbers-mode" data-highlighter="shiki" data-ext="c" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">#include</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &lt;windows.h&gt;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">#include</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &lt;stdio.h&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> GetAcpiTable</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">() {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    DWORD tableID </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;DSDT&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  // 读取 DSDT 表</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    DWORD bufferSize </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> GetSystemFirmwareTable</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;ACPI&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, tableID, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">NULL</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (bufferSize </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">==</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        printf</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Failed to get ACPI table size.</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    void*</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> buffer </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> malloc</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(bufferSize);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">GetSystemFirmwareTable</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;ACPI&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, tableID, buffer, bufferSize)) {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        printf</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;ACPI Table Data Retrieved Successfully.</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        // 这里可以解析表数据</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">else</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        printf</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Failed to retrieve ACPI table data.</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    free</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(buffer);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">int</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">() {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    GetAcpiTable</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    return</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h3 id="注意事项" tabindex="-1"><a class="header-anchor" href="#注意事项"><span><strong>注意事项</strong></span></a></h3><ol><li><p><strong>权限</strong>：</p><ul><li>读取固件数据可能需要管理员权限。</li></ul></li><li><p><strong>兼容性</strong>：</p><ul><li><code>SystemFirmwareTable</code> 和 <code>EnumSystemFirmwareTables</code> 从 Windows Vista 开始支持。</li></ul></li><li><p><strong>缓冲区大小</strong>：</p><ul><li>如果提供的缓冲区大小不足，函数会返回所需的大小，调用者需要动态分配。</li></ul></li><li><p><strong>数据解析</strong>：</p><ul><li>返回的数据通常是二进制格式，开发者需要根据表的格式（如 ACPI 表）自行解析。</li></ul></li></ol><hr><h3 id="相关-api" tabindex="-1"><a class="header-anchor" href="#相关-api"><span><strong>相关 API</strong></span></a></h3><ol><li><p><strong><code>EnumSystemFirmwareTables</code></strong>：</p><ul><li>用于列出系统中所有的固件表签名。</li></ul></li><li><p><strong><code>GetFirmwareEnvironmentVariable</code></strong>：</p><ul><li>获取固件环境变量（常用于 UEFI 系统）。</li></ul></li><li><p><strong><code>SetFirmwareEnvironmentVariable</code></strong>：</p><ul><li>设置固件环境变量。</li></ul></li></ol><hr><h3 id="总结" tabindex="-1"><a class="header-anchor" href="#总结"><span><strong>总结</strong></span></a></h3><p><code>SystemFirmwareTable</code> 是一个强大的工具，用于在 Windows 中访问系统固件（BIOS/UEFI）中存储的重要数据。它在硬件调试、驱动程序开发和系统管理中都有广泛的应用。通过结合 <code>EnumSystemFirmwareTables</code>，开发者可以灵活地列出和读取特定的固件表数据。</p>`,31)]))}const k=s(e,[["render",t],["__file","windows-SystemFirmwareTable.html.vue"]]),d=JSON.parse('{"path":"/public-articles/windows-SystemFirmwareTable.html","title":"SystemFirmwareTable","lang":"zh-CN","frontmatter":{"description":"SystemFirmwareTable 什么是 SystemFirmwareTable？ SystemFirmwareTable 是一个与系统固件（BIOS 或 UEFI）相关的 Windows API 函数，用于访问系统固件提供的数据。它位于 Windows 的 Kernel32.dll 中，通常用于检索存储在固件中的特定信息，例如 ACPI 表、S...","head":[["meta",{"property":"og:url","content":"https://github.com/biezhihua/public-articles/windows-SystemFirmwareTable.html"}],["meta",{"property":"og:site_name","content":"biezhihua的日常"}],["meta",{"property":"og:title","content":"SystemFirmwareTable"}],["meta",{"property":"og:description","content":"SystemFirmwareTable 什么是 SystemFirmwareTable？ SystemFirmwareTable 是一个与系统固件（BIOS 或 UEFI）相关的 Windows API 函数，用于访问系统固件提供的数据。它位于 Windows 的 Kernel32.dll 中，通常用于检索存储在固件中的特定信息，例如 ACPI 表、S..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-03-08T14:25:34.000Z"}],["meta",{"property":"article:modified_time","content":"2025-03-08T14:25:34.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"SystemFirmwareTable\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-03-08T14:25:34.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"别志华\\",\\"url\\":\\"https://github.com/biezhihua\\"}]}"]]},"git":{"createdTime":1734156763000,"updatedTime":1741443934000,"contributors":[{"name":"biezhihua","username":"biezhihua","email":"biezhihua@gmail.com","commits":2,"url":"https://github.com/biezhihua"}]},"readingTime":{"minutes":3.29,"words":987},"filePathRelative":"public-articles/windows-SystemFirmwareTable.md","localizedDate":"2024年12月14日","excerpt":"","autoDesc":true}');export{k as comp,d as data};
