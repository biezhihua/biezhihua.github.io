import{_ as e,Y as a,Z as r,a2 as t}from"./framework-301d0703.js";const s={},c=t('<h1 id="perfetto-17-system-calls-系统调用" tabindex="-1"><a class="header-anchor" href="#perfetto-17-system-calls-系统调用" aria-hidden="true">#</a> Perfetto - 17 - System calls 系统调用</h1><p>在Linux和Android（仅限userdebug版本），Perfetto可以跟踪系统调用。</p><p>目前，跟踪中只记录系统调用号，不记录参数以限制跟踪大小开销。</p><p>在导入时，Trace Processor使用内部系统调用映射表，当前支持x86，x86_64，ArmEabi，aarch32和aarch64。这些表是通过extract_linux_syscall_tables脚本生成的。</p><h2 id="ui" tabindex="-1"><a class="header-anchor" href="#ui" aria-hidden="true">#</a> UI</h2><p>在UI层面，系统调用与每个线程片段轨迹一起显示：</p><h2 id="sql" tabindex="-1"><a class="header-anchor" href="#sql" aria-hidden="true">#</a> SQL</h2><h2 id="traceconfig" tabindex="-1"><a class="header-anchor" href="#traceconfig" aria-hidden="true">#</a> TraceConfig</h2><h2 id="reference" tabindex="-1"><a class="header-anchor" href="#reference" aria-hidden="true">#</a> Reference</h2><ul><li>https://perfetto.dev/docs/data-sources/syscalls</li></ul>',10),d=[c];function i(h,n){return a(),r("div",null,d)}const l=e(s,[["render",i],["__file","perfetto-17-data-sources-system-calls.html.vue"]]);export{l as default};
