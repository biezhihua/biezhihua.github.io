import{_ as d,C as i,Y as s,Z as u,$ as e,a0 as l,a1 as n,a3 as o,a2 as a}from"./framework-301d0703.js";const c={},f=a('<h1 id="android-性能优化-流畅性-第00篇-序" tabindex="-1"><a class="header-anchor" href="#android-性能优化-流畅性-第00篇-序" aria-hidden="true">#</a> Android | 性能优化 | 流畅性 - 第00篇 - 序</h1><h2 id="前言" tabindex="-1"><a class="header-anchor" href="#前言" aria-hidden="true">#</a> 前言</h2><p>最近碰到不少性能优化相关的问题，又恰好拜读了很多优秀的博客与文章，萌生出总结一下知识体系的想法。</p><p>Android发展至今天，性能优化可分为多种优化方向：</p><ul><li>应用相关： <ul><li>流畅性问题： <ul><li>流畅度（滑动列表的时候掉帧、窗口动画不连贯、重启手机进入桌面卡顿）（渲染缓慢、帧冻结）</li><li>响应速度（应用启动白屏过长、点击电源键亮屏慢、滑动不跟手）（App start time、ANR）</li></ul></li><li>稳定性问题： <ul><li>界面操作没有反应、闪退、点击图标没有响应（Crash）</li></ul></li><li>电池问题</li><li>内存问题</li></ul></li><li>构建相关： <ul><li>包大小</li><li>构建速度</li></ul></li></ul><p>本系列文章将流畅度问题和响应速度问题统一为流畅性问题，并聚焦于流畅性问题的定义、分析和排查等方面。</p><p>本系列文章按照 - 定义问题、寻找关键点、搞清楚该使用的技术、弄明白该使用的工具、如何准确快速的定位问题、实战演示 - 的思路来编写文章，最终教会读者如何优化自己的应用。</p><h2 id="大纲" tabindex="-1"><a class="header-anchor" href="#大纲" aria-hidden="true">#</a> 大纲</h2>',8),h=e("strong",null,"性能优化 - 流畅性 - 概述",-1),p=e("ul",null,[e("li",null,"摘要：当我们提及流畅性时，指的到底是什么？从用户角度和技术角度各有什么区别？")],-1),_=e("strong",null,"性能优化 - 流畅性 - 帧率",-1),m=e("ul",null,[e("li",null,"摘要：基本概念；帧率匹配；60FPS、90FPS、120FPS的差异。")],-1),g=e("strong",null,"性能优化 - 流畅性 - 可观测技术",-1),y=e("ul",null,[e("li",null,"摘要：Android中都有哪些可观测技术？都有什么作用？能帮助我们做什么？")],-1),b=e("strong",null,"性能优化 - 流畅性 - 追踪（tracing）",-1),P=e("ul",null,[e("li",null,"摘要：trace是什么？")],-1),A=e("strong",null,"性能优化 - 流畅性 - 性能分析工具 - Perfetto",-1),k=e("ul",null,[e("li",null,"摘要：如何识别Perfetto中的展示效果。")],-1),v=e("strong",null,"性能优化 - 流畅性 - 性能分析工具 - Android Studio Profiler",-1),x=e("ul",null,[e("li",null,"摘要：如何利用集成工具排查性能问题。")],-1),w=e("strong",null,"性能优化 - 流畅性 - 从Perfetto角度理解Android系统 - 概述",-1),S=e("ul",null,[e("li",null,"摘要：一帧的渲染过程，以及其中涉及到的各个部分和阶段，用来引入剩余文章内容。")],-1),C=e("strong",null,"性能优化 - 流畅性 - 从Perfetto角度理解Android系统 - 图形渲染和显示 - Vsync",-1),B=e("ul",null,[e("li",null,"摘要：本部分将详细介绍Vsync信号的作用和原理，以及它如何影响图形渲染流程。")],-1),V=e("strong",null,"性能优化 - 流畅性 - 从Perfetto角度理解Android系统 - 图形渲染和显示 - Choreographer",-1),F=e("ul",null,[e("li",null,"摘要：本部分将讨论Choreographer的作用和原理，以及它与Vsync机制之间的关系。")],-1),I=e("strong",null,"性能优化 - 流畅性 - 从Perfetto角度理解Android系统 - 图形渲染和显示 - UI线程与Render线程",-1),L=e("ul",null,[e("li",null,"摘要：本部分将讨论UI线程和Render线程的作用及区别，分析它们在图形渲染过程中的关键角色。")],-1),N=e("strong",null,"性能优化 - 流畅性 - 从Perfetto角度理解Android系统 - 图形渲染和显示 - SurfaceFlinger",-1),R=e("ul",null,[e("li",null,"摘要：本部分将详细介绍SurfaceFlinger的作用，以及它与其他图形组件的协作关系。")],-1),E=e("strong",null,"性能优化 - 流畅性 - 从Perfetto角度理解Android系统 - 图形渲染和显示 - Hardware Composer",-1),H=e("ul",null,[e("li",null,"摘要：本部分将讨论Hardware Composer的作用和原理，以及它与SurfaceFlinger之间的协作关系。")],-1),T=e("strong",null,"性能优化 - 流畅性 - 从Perfetto角度理解Android系统 - 图形渲染和显示 - Trip Buffer",-1),M=e("ul",null,[e("li",null,"摘要：本部分将介绍Triple Buffer的作用和原理，以及它与图形渲染的关系。")],-1),U=a("<li><p>第15篇：<strong>性能优化 - 流畅性 - 从Perfetto角度理解Android系统 - 系统服务和组件 - SystemServer</strong></p><ul><li>摘要：。</li></ul></li><li><p>第16篇：<strong>性能优化 - 流畅性 - 从Perfetto角度理解Android系统 - 系统服务和组件 - Message、Handler、MessageQueue、Looper</strong></p><ul><li>摘要：。</li></ul></li><li><p>第17篇：<strong>性能优化 - 流畅性 - 从Perfetto角度理解Android系统 - 系统服务和组件 - Input</strong></p><ul><li>摘要。</li></ul></li><li><p>第18篇：<strong>性能优化 - 流畅性 - 从Perfetto角度理解Android系统 - IPC 通信 - Binder</strong></p><ul><li>摘要：介绍Binder机制;介绍锁竞争导致的性能恶化。</li></ul></li><li><p>第19篇：<strong>性能优化 - 流畅性 - 实战 - 分析和解决卡顿问题</strong></p><ul><li>摘要：模拟碰到过的实际案例，分析和解决其碰到的性能问题。</li></ul></li>",5),O=e("h2",{id:"引用",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#引用","aria-hidden":"true"},"#"),l(" 引用")],-1),Q={href:"https://androidperformance.com/2021/10/27/if-i-write-a-book-about-performance",target:"_blank",rel:"noopener noreferrer"},Y={href:"https://developer.android.com/topic/performance",target:"_blank",rel:"noopener noreferrer"},Z={href:"https://androidperformance.com",target:"_blank",rel:"noopener noreferrer"},$={href:"https://androidperformance.com/2021/10/27/if-i-write-a-book-about-performance",target:"_blank",rel:"noopener noreferrer"},j={href:"https://androidperformance.com/2021/04/24/android-systrace-smooth-in-action-1",target:"_blank",rel:"noopener noreferrer"},q=e("h2",{id:"版权声明",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#版权声明","aria-hidden":"true"},"#"),l(" 版权声明")],-1),z={href:"https://creativecommons.org/licenses/by-nc/4.0/",target:"_blank",rel:"noopener noreferrer"};function D(G,J){const r=i("RouterLink"),t=i("ExternalLinkIcon");return s(),u("div",null,[f,e("ul",null,[e("li",null,[e("p",null,[l("第01篇："),n(r,{to:"/learn-android/performance/fluency-01-overview.html"},{default:o(()=>[h]),_:1})]),p]),e("li",null,[e("p",null,[l("第02篇："),n(r,{to:"/learn-android/performance/fluency-02-fps.html"},{default:o(()=>[_]),_:1})]),m]),e("li",null,[e("p",null,[l("第03篇："),n(r,{to:"/learn-android/performance/fluency-03-observability-technology.html"},{default:o(()=>[g]),_:1})]),y]),e("li",null,[e("p",null,[l("第04篇："),n(r,{to:"/learn-android/performance/fluency-04-tracing.html"},{default:o(()=>[b]),_:1})]),P]),e("li",null,[e("p",null,[l("第05篇："),n(r,{to:"/learn-android/performance/fluency-05-tools-perfetto.html"},{default:o(()=>[A]),_:1})]),k]),e("li",null,[e("p",null,[l("第06篇："),n(r,{to:"/learn-android/performance/fluency-06-tools-android-profiler.html"},{default:o(()=>[v]),_:1})]),x]),e("li",null,[e("p",null,[l("第07篇："),n(r,{to:"/learn-android/performance/fluency-07-perfetto-android-overview.html"},{default:o(()=>[w]),_:1})]),S]),e("li",null,[e("p",null,[l("第08篇："),n(r,{to:"/learn-android/performance/fluency-08-perfetto-android-graphics-vsync.html"},{default:o(()=>[C]),_:1})]),B]),e("li",null,[e("p",null,[l("第09篇："),n(r,{to:"/learn-android/performance/fluency-09-perfetto-android-graphics-choreographer.html"},{default:o(()=>[V]),_:1})]),F]),e("li",null,[e("p",null,[l("第10篇："),n(r,{to:"/learn-android/performance/fluency-10-perfetto-android-graphics-uithread-and-renderthread.html"},{default:o(()=>[I]),_:1})]),L]),e("li",null,[e("p",null,[l("第11篇："),n(r,{to:"/learn-android/performance/fluency-11-perfetto-android-graphics-surfaceflinger.html"},{default:o(()=>[N]),_:1})]),R]),e("li",null,[e("p",null,[l("第12篇："),n(r,{to:"/learn-android/performance/fluency-12-perfetto-android-graphics-hardware-composer.html"},{default:o(()=>[E]),_:1})]),H]),e("li",null,[e("p",null,[l("第13篇："),n(r,{to:"/learn-android/performance/fluency-13-perfetto-android-graphics-trip-buffer.html"},{default:o(()=>[T]),_:1})]),M]),U]),O,e("ul",null,[e("li",null,[e("a",Q,[l("https://androidperformance.com/2021/10/27/if-i-write-a-book-about-performance"),n(t)])]),e("li",null,[e("a",Y,[l("https://developer.android.com/topic/performance"),n(t)])]),e("li",null,[e("a",Z,[l("https://androidperformance.com"),n(t)])]),e("li",null,[e("a",$,[l("https://androidperformance.com/2021/10/27/if-i-write-a-book-about-performance"),n(t)])]),e("li",null,[e("a",j,[l("https://androidperformance.com/2021/04/24/android-systrace-smooth-in-action-1"),n(t)])])]),q,e("p",null,[l("本文采用"),e("a",z,[l("知识共享署名-非商业性使用 4.0 国际许可协议"),n(t)]),l("进行许可")])])}const W=d(c,[["render",D],["__file","fluency-00-outline.html.vue"]]);export{W as default};
