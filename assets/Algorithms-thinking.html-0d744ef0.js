const l=JSON.parse('{"key":"v-6f82ac90","path":"/learn-leetcode/Algorithms-thinking.html","title":"算法思想","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"算法基本思想","slug":"算法基本思想","link":"#算法基本思想","children":[]},{"level":2,"title":"分治算法","slug":"分治算法","link":"#分治算法","children":[{"level":3,"title":"分治算法 - 思路","slug":"分治算法-思路","link":"#分治算法-思路","children":[]},{"level":3,"title":"分治算法 - 递归式","slug":"分治算法-递归式","link":"#分治算法-递归式","children":[]},{"level":3,"title":"分治算法 - 被忽略的技术细节","slug":"分治算法-被忽略的技术细节","link":"#分治算法-被忽略的技术细节","children":[]},{"level":3,"title":"分治算法 - 用代入法求解递归式","slug":"分治算法-用代入法求解递归式","link":"#分治算法-用代入法求解递归式","children":[]},{"level":3,"title":"分治算法 - 用递归树法求解递归式","slug":"分治算法-用递归树法求解递归式","link":"#分治算法-用递归树法求解递归式","children":[]},{"level":3,"title":"分治算法 - 用主方法求解递归式","slug":"分治算法-用主方法求解递归式","link":"#分治算法-用主方法求解递归式","children":[]}]},{"level":2,"title":"动态规划","slug":"动态规划","link":"#动态规划","children":[{"level":3,"title":"钢条切割","slug":"钢条切割","link":"#钢条切割","children":[]},{"level":3,"title":"矩阵链乘法","slug":"矩阵链乘法","link":"#矩阵链乘法","children":[]},{"level":3,"title":"动态规划原理","slug":"动态规划原理","link":"#动态规划原理","children":[]},{"level":3,"title":"最长公共子序列","slug":"最长公共子序列","link":"#最长公共子序列","children":[]},{"level":3,"title":"最优二叉搜索树","slug":"最优二叉搜索树","link":"#最优二叉搜索树","children":[]}]},{"level":2,"title":"贪心算法","slug":"贪心算法","link":"#贪心算法","children":[]},{"level":2,"title":"摊还分析","slug":"摊还分析","link":"#摊还分析","children":[]}],"git":{"createdTime":1678770176000,"updatedTime":1678770176000,"contributors":[{"name":"biezhihua","email":"biezhihua@gmail.com","commits":1}]},"readingTime":{"minutes":11.02,"words":3305},"filePathRelative":"learn-leetcode/Algorithms-thinking.md","localizedDate":"2023年3月14日","excerpt":""}');export{l as data};
