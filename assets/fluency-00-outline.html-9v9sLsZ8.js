import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{e as d,f as i,g as l,h as e,i as o,j as t,r as u,o as p}from"./app-D4ZtVCQo.js";const f={};function s(m,r){const n=u("RouteLink");return p(),d("div",null,[r[40]||(r[40]=i('<h1 id="android-性能优化-流畅性-第00篇-序" tabindex="-1"><a class="header-anchor" href="#android-性能优化-流畅性-第00篇-序"><span>Android | 性能优化 | 流畅性 - 第00篇 - 序</span></a></h1><h2 id="前言" tabindex="-1"><a class="header-anchor" href="#前言"><span>前言</span></a></h2><p>最近碰到不少性能优化相关的问题，又恰好拜读了很多优秀的博客与文章，萌生出总结一下知识体系的想法。</p><p>Android发展至今天，性能优化可分为多种优化方向：</p><ul><li>应用相关： <ul><li>流畅性问题： <ul><li>流畅度（滑动列表的时候掉帧、窗口动画不连贯、重启手机进入桌面卡顿）（渲染缓慢、帧冻结）</li><li>响应速度（应用启动白屏过长、点击电源键亮屏慢、滑动不跟手）（App start time、ANR）</li></ul></li><li>稳定性问题： <ul><li>界面操作没有反应、闪退、点击图标没有响应（Crash）</li></ul></li><li>电池问题</li><li>内存问题</li></ul></li><li>构建相关： <ul><li>包大小</li><li>构建速度</li></ul></li></ul><p>本系列文章将流畅度问题和响应速度问题统一为流畅性问题，并聚焦于流畅性问题的定义、分析和排查等方面。</p><p>本系列文章按照 - 定义问题、寻找关键点、搞清楚该使用的技术、弄明白该使用的工具、如何准确快速的定位问题、实战演示 - 的思路来编写文章，最终教会读者如何优化自己的应用。</p><h2 id="大纲" tabindex="-1"><a class="header-anchor" href="#大纲"><span>大纲</span></a></h2>',8)),l("ul",null,[l("li",null,[l("p",null,[r[1]||(r[1]=e("第01篇：")),o(n,{to:"/learn-android/performance/fluency-01-overview.html"},{default:t(()=>r[0]||(r[0]=[l("strong",null,"性能优化 - 流畅性 - 概述",-1)])),_:1})]),r[2]||(r[2]=l("ul",null,[l("li",null,"摘要：当我们提及流畅性时，指的到底是什么？从用户角度和技术角度各有什么区别？")],-1))]),l("li",null,[l("p",null,[r[4]||(r[4]=e("第02篇：")),o(n,{to:"/learn-android/performance/fluency-02-fps.html"},{default:t(()=>r[3]||(r[3]=[l("strong",null,"性能优化 - 流畅性 - 帧率",-1)])),_:1})]),r[5]||(r[5]=l("ul",null,[l("li",null,"摘要：基本概念；帧率匹配；60FPS、90FPS、120FPS的差异。")],-1))]),l("li",null,[l("p",null,[r[7]||(r[7]=e("第03篇：")),o(n,{to:"/learn-android/performance/fluency-03-observability-technology.html"},{default:t(()=>r[6]||(r[6]=[l("strong",null,"性能优化 - 流畅性 - 可观测技术",-1)])),_:1})]),r[8]||(r[8]=l("ul",null,[l("li",null,"摘要：Android中都有哪些可观测技术？都有什么作用？能帮助我们做什么？")],-1))]),l("li",null,[l("p",null,[r[10]||(r[10]=e("第04篇：")),o(n,{to:"/learn-android/performance/fluency-04-tracing.html"},{default:t(()=>r[9]||(r[9]=[l("strong",null,"性能优化 - 流畅性 - 追踪（tracing）",-1)])),_:1})]),r[11]||(r[11]=l("ul",null,[l("li",null,"摘要：trace是什么？")],-1))]),l("li",null,[l("p",null,[r[13]||(r[13]=e("第05篇：")),o(n,{to:"/learn-android/performance/fluency-05-tools-perfetto.html"},{default:t(()=>r[12]||(r[12]=[l("strong",null,"性能优化 - 流畅性 - 性能分析工具 - Perfetto",-1)])),_:1})]),r[14]||(r[14]=l("ul",null,[l("li",null,"摘要：如何识别Perfetto中的展示效果。")],-1))]),l("li",null,[l("p",null,[r[16]||(r[16]=e("第06篇：")),o(n,{to:"/learn-android/performance/fluency-06-tools-android-profiler.html"},{default:t(()=>r[15]||(r[15]=[l("strong",null,"性能优化 - 流畅性 - 性能分析工具 - Android Studio Profiler",-1)])),_:1})]),r[17]||(r[17]=l("ul",null,[l("li",null,"摘要：如何利用集成工具排查性能问题。")],-1))]),l("li",null,[l("p",null,[r[19]||(r[19]=e("第07篇：")),o(n,{to:"/learn-android/performance/fluency-07-perfetto-android-overview.html"},{default:t(()=>r[18]||(r[18]=[l("strong",null,"性能优化 - 流畅性 - 从Perfetto角度理解Android系统 - 概述",-1)])),_:1})]),r[20]||(r[20]=l("ul",null,[l("li",null,"摘要：一帧的渲染过程，以及其中涉及到的各个部分和阶段，用来引入剩余文章内容。")],-1))]),l("li",null,[l("p",null,[r[22]||(r[22]=e("第08篇：")),o(n,{to:"/learn-android/performance/fluency-08-perfetto-android-graphics-vsync.html"},{default:t(()=>r[21]||(r[21]=[l("strong",null,"性能优化 - 流畅性 - 从Perfetto角度理解Android系统 - 图形渲染和显示 - Vsync",-1)])),_:1})]),r[23]||(r[23]=l("ul",null,[l("li",null,"摘要：本部分将详细介绍Vsync信号的作用和原理，以及它如何影响图形渲染流程。")],-1))]),l("li",null,[l("p",null,[r[25]||(r[25]=e("第09篇：")),o(n,{to:"/learn-android/performance/fluency-09-perfetto-android-graphics-choreographer.html"},{default:t(()=>r[24]||(r[24]=[l("strong",null,"性能优化 - 流畅性 - 从Perfetto角度理解Android系统 - 图形渲染和显示 - Choreographer",-1)])),_:1})]),r[26]||(r[26]=l("ul",null,[l("li",null,"摘要：本部分将讨论Choreographer的作用和原理，以及它与Vsync机制之间的关系。")],-1))]),l("li",null,[l("p",null,[r[28]||(r[28]=e("第10篇：")),o(n,{to:"/learn-android/performance/fluency-10-perfetto-android-graphics-uithread-and-renderthread.html"},{default:t(()=>r[27]||(r[27]=[l("strong",null,"性能优化 - 流畅性 - 从Perfetto角度理解Android系统 - 图形渲染和显示 - UI线程与Render线程",-1)])),_:1})]),r[29]||(r[29]=l("ul",null,[l("li",null,"摘要：本部分将讨论UI线程和Render线程的作用及区别，分析它们在图形渲染过程中的关键角色。")],-1))]),l("li",null,[l("p",null,[r[31]||(r[31]=e("第11篇：")),o(n,{to:"/learn-android/performance/fluency-11-perfetto-android-graphics-surfaceflinger.html"},{default:t(()=>r[30]||(r[30]=[l("strong",null,"性能优化 - 流畅性 - 从Perfetto角度理解Android系统 - 图形渲染和显示 - SurfaceFlinger",-1)])),_:1})]),r[32]||(r[32]=l("ul",null,[l("li",null,"摘要：本部分将详细介绍SurfaceFlinger的作用，以及它与其他图形组件的协作关系。")],-1))]),l("li",null,[l("p",null,[r[34]||(r[34]=e("第12篇：")),o(n,{to:"/learn-android/performance/fluency-12-perfetto-android-graphics-hardware-composer.html"},{default:t(()=>r[33]||(r[33]=[l("strong",null,"性能优化 - 流畅性 - 从Perfetto角度理解Android系统 - 图形渲染和显示 - Hardware Composer",-1)])),_:1})]),r[35]||(r[35]=l("ul",null,[l("li",null,"摘要：本部分将讨论Hardware Composer的作用和原理，以及它与SurfaceFlinger之间的协作关系。")],-1))]),l("li",null,[l("p",null,[r[37]||(r[37]=e("第13篇：")),o(n,{to:"/learn-android/performance/fluency-13-perfetto-android-graphics-trip-buffer.html"},{default:t(()=>r[36]||(r[36]=[l("strong",null,"性能优化 - 流畅性 - 从Perfetto角度理解Android系统 - 图形渲染和显示 - Trip Buffer",-1)])),_:1})]),r[38]||(r[38]=l("ul",null,[l("li",null,"摘要：本部分将介绍Triple Buffer的作用和原理，以及它与图形渲染的关系。")],-1))]),r[39]||(r[39]=i("<li><p>第15篇：<strong>性能优化 - 流畅性 - 从Perfetto角度理解Android系统 - 系统服务和组件 - SystemServer</strong></p><ul><li>摘要：。</li></ul></li><li><p>第16篇：<strong>性能优化 - 流畅性 - 从Perfetto角度理解Android系统 - 系统服务和组件 - Message、Handler、MessageQueue、Looper</strong></p><ul><li>摘要：。</li></ul></li><li><p>第17篇：<strong>性能优化 - 流畅性 - 从Perfetto角度理解Android系统 - 系统服务和组件 - Input</strong></p><ul><li>摘要。</li></ul></li><li><p>第18篇：<strong>性能优化 - 流畅性 - 从Perfetto角度理解Android系统 - IPC 通信 - Binder</strong></p><ul><li>摘要：介绍Binder机制;介绍锁竞争导致的性能恶化。</li></ul></li><li><p>第19篇：<strong>性能优化 - 流畅性 - 实战 - 分析和解决卡顿问题</strong></p><ul><li>摘要：模拟碰到过的实际案例，分析和解决其碰到的性能问题。</li></ul></li>",5))]),r[41]||(r[41]=i('<h2 id="引用" tabindex="-1"><a class="header-anchor" href="#引用"><span>引用</span></a></h2><ul><li><a href="https://androidperformance.com/2021/10/27/if-i-write-a-book-about-performance" target="_blank" rel="noopener noreferrer">https://androidperformance.com/2021/10/27/if-i-write-a-book-about-performance</a></li><li><a href="https://developer.android.com/topic/performance" target="_blank" rel="noopener noreferrer">https://developer.android.com/topic/performance</a></li><li><a href="https://androidperformance.com" target="_blank" rel="noopener noreferrer">https://androidperformance.com</a></li><li><a href="https://androidperformance.com/2021/10/27/if-i-write-a-book-about-performance" target="_blank" rel="noopener noreferrer">https://androidperformance.com/2021/10/27/if-i-write-a-book-about-performance</a></li><li><a href="https://androidperformance.com/2021/04/24/android-systrace-smooth-in-action-1" target="_blank" rel="noopener noreferrer">https://androidperformance.com/2021/04/24/android-systrace-smooth-in-action-1</a></li></ul><h2 id="版权声明" tabindex="-1"><a class="header-anchor" href="#版权声明"><span>版权声明</span></a></h2><p>本文采用<a href="https://creativecommons.org/licenses/by-nc/4.0/" target="_blank" rel="noopener noreferrer">知识共享署名-非商业性使用 4.0 国际许可协议</a>进行许可</p>',4))])}const b=a(f,[["render",s],["__file","fluency-00-outline.html.vue"]]),h=JSON.parse('{"path":"/learn-android/performance/fluency-00-outline.html","title":"Android | 性能优化 | 流畅性 - 第00篇 - 序","lang":"zh-CN","frontmatter":{"tag":["android","performance","fluency"],"description":"Android | 性能优化 | 流畅性 - 第00篇 - 序 前言 最近碰到不少性能优化相关的问题，又恰好拜读了很多优秀的博客与文章，萌生出总结一下知识体系的想法。 Android发展至今天，性能优化可分为多种优化方向： 应用相关： 流畅性问题： 流畅度（滑动列表的时候掉帧、窗口动画不连贯、重启手机进入桌面卡顿）（渲染缓慢、帧冻结） 响应速度（应用启...","head":[["meta",{"property":"og:url","content":"https://github.com/biezhihua/learn-android/performance/fluency-00-outline.html"}],["meta",{"property":"og:site_name","content":"biezhihua的日常"}],["meta",{"property":"og:title","content":"Android | 性能优化 | 流畅性 - 第00篇 - 序"}],["meta",{"property":"og:description","content":"Android | 性能优化 | 流畅性 - 第00篇 - 序 前言 最近碰到不少性能优化相关的问题，又恰好拜读了很多优秀的博客与文章，萌生出总结一下知识体系的想法。 Android发展至今天，性能优化可分为多种优化方向： 应用相关： 流畅性问题： 流畅度（滑动列表的时候掉帧、窗口动画不连贯、重启手机进入桌面卡顿）（渲染缓慢、帧冻结） 响应速度（应用启..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-03-08T14:25:34.000Z"}],["meta",{"property":"article:tag","content":"android"}],["meta",{"property":"article:tag","content":"performance"}],["meta",{"property":"article:tag","content":"fluency"}],["meta",{"property":"article:modified_time","content":"2025-03-08T14:25:34.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Android | 性能优化 | 流畅性 - 第00篇 - 序\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-03-08T14:25:34.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"别志华\\",\\"url\\":\\"https://github.com/biezhihua\\"}]}"]]},"git":{"createdTime":1678851993000,"updatedTime":1741443934000,"contributors":[{"name":"biezhihua","username":"biezhihua","email":"biezhihua@gmail.com","commits":32,"url":"https://github.com/biezhihua"}]},"readingTime":{"minutes":4.11,"words":1233},"filePathRelative":"learn-android/performance/fluency-00-outline.md","localizedDate":"2023年3月15日","excerpt":"","autoDesc":true}');export{b as comp,h as data};
