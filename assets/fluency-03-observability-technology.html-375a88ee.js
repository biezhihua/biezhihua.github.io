import{_ as o,C as p,Y as r,Z as c,$ as n,a0 as s,a1 as e,a2 as t}from"./framework-301d0703.js";const i="/learn-android/performance/android-profiler.png",l="/learn-android/performance/android-profiler-callstack-sample-scroll-mainthread-setting-app.png",d="/learn-android/performance/android-profiler-callstack-sample-scroll-renderthread-setting-app.png",u="/learn-android/performance/android-profiler-system-trace-setting-app.png",k="/learn-android/performance/android-profiler-java-kotlin-method-trace.png",m="/learn-android/performance/android-profiler-java-kotlin-method-sample.png",h="/learn-android/performance/fluency-tools-perfetto.png",_="/learn-android/performance/fluency-tools-systrace.png",v={},f=t(`<h1 id="android-性能优化-流畅性-第03篇-可观测性技术" tabindex="-1"><a class="header-anchor" href="#android-性能优化-流畅性-第03篇-可观测性技术" aria-hidden="true">#</a> Android | 性能优化 | 流畅性 - 第03篇 - 可观测性技术</h1><h2 id="什么是可观测性技术" tabindex="-1"><a class="header-anchor" href="#什么是可观测性技术" aria-hidden="true">#</a> 什么是可观测性技术？</h2><p>可观测性技术是一种通过检查系统的输出来测量系统内部状态的能力。</p><p>可观测性技术通常包括三个方面：</p><ul><li><strong>日志（logs）</strong>：系统中事件和活动的文本记录，如错误消息、警告和信息性消息。</li><li><strong>指标（metrics）</strong>：系统行为随时间的定量测量，如 CPU 利用率、内存使用和响应时间等。</li><li><strong>跟踪（traces）</strong>：请求在系统中的活动和事务记录，包括它的路径、涉及的服务和在每个步骤花费的时间的信息。</li></ul><p>通过收集和分析这些数据，可观测性技术使开发人员能够了解系统的行为，进而诊断问题，并做出关于如何提高其性能、可靠性和可扩展性的决策。</p><p>可观测性技术还为实施自动化警报和监视提供了基础，可以帮助及时检测和响应问题。</p><h2 id="为什么可观测性技术很重要" tabindex="-1"><a class="header-anchor" href="#为什么可观测性技术很重要" aria-hidden="true">#</a> 为什么可观测性技术很重要？</h2><p>可观测性技术是一个系统性工程，它能够让你更深入的了解软件里发生的事情。</p><p>可观测性技术对于软件开发方面非常重要，原因如下：</p><ul><li><strong>问题排查</strong>：当系统发生故障或者出现异常情况时，可观测性技术可以帮助开发人员快速定位问题的根源，从而更快地解决问题。</li><li><strong>性能优化</strong>：通过监测系统的各个组件，可以了解系统的性能瓶颈，从而采取相应的优化措施，提高系统的性能和稳定性。</li><li><strong>技术成长</strong>：对个人来说，当面对复杂的系统，通过阅读代码来了解整个运行过程其实是很困难的事情，更高效的方法就是借助此类工具，以最直观的的方式获取软件运行的状态。</li></ul><p>此外，更重要的是：可观测性技术允许你回答一些有趣的问题来摆脱某些技术困境，例如：</p><ul><li>这个操作到底有没有被执行？执行时间有多长？</li><li>为什么两个版本的前后差异这么大？</li><li>当 CPU 使用量变高的时候系统都在执行什么操作？</li><li>为什么启动速度变慢了？</li><li>为什么这个页面滑动总是会卡一下？</li></ul><h2 id="android中的可观测性技术" tabindex="-1"><a class="header-anchor" href="#android中的可观测性技术" aria-hidden="true">#</a> Android中的可观测性技术</h2><p>在Android中，通过可观测性技术来收集和分析各种类型数据，以便从外部了解和观察Android系统。 数据类型包括日志（Log）、度量（Matric）、跟踪（Trace）。</p><h3 id="日志-log" tabindex="-1"><a class="header-anchor" href="#日志-log" aria-hidden="true">#</a> 日志 Log</h3><p>在 Android 开发中，Log 是最常用的调试工具之一。它能够记录应用程序的运行状态，帮助开发人员追踪代码中的错误并解决问题。使用 Log 技术可以输出调试信息、警告信息和错误信息。</p><p>Android 中的 Log 提供了五个级别的日志输出，分别是VERBOSE、DEBUG、INFO、WARN和ERROR。通过设置不同的日志级别，可以输出不同级别的信息，从而在开发过程中帮助开发人员更快地定位和解决问题。</p><p>在移动设备上，由于设备资源和运行环境的限制，不推荐使用Debug模式。因此，Log就成为了开发人员调试应用程序的重要工具。</p><p>通过使用Log输出相关信息，开发人员可以:</p><ul><li>可得到应用程序的运行状态，包括代码执行路径、变量值和异常信息等。</li><li>可以快速定位问题所在，并进行相应的修复。</li><li>可以进行性能分析和代码优化，提高应用程序的性能和稳定性。</li></ul><p>你可以根据你的目的，将 Log 类型进行等级划分，它就像一个索引一样，可以进一步可以提高分析问题、定位目标信息的效率。</p><h3 id="指标-metric" tabindex="-1"><a class="header-anchor" href="#指标-metric" aria-hidden="true">#</a> 指标 Metric</h3><p>在 Android 应用程序中，指标（Metric）类型相比 Log 类型使用目的上更为聚焦，它记录的是某个维度上数值的变化，指标（Metric）会在在应用程序运行时收集的各种数据，例如：内存使用情况、CPU使用率、网络延迟等。这些指标数据可以用于监控应用程序的性能，帮助开发人员了解应用程序的行为，并诊断和解决问题。</p><p>Android 提供了一些用于收集和记录指标数据的工具和库。其中最常用的是 Android 系统自带的 MetricsLogger 类，该类提供了许多方法用于记录各种指标数据，例如计数器、时间戳和键值对等。</p><p>收集到的指标数据可以通过各种方式进行可视化和分析，例如：在Android Studio中使用Profiler工具、使用第三方工具和库等。</p><h3 id="跟踪-trace" tabindex="-1"><a class="header-anchor" href="#跟踪-trace" aria-hidden="true">#</a> 跟踪 Trace</h3><p>Trace 是 Android 平台提供的一种性能分析工具，它可以用于检测应用程序中的性能瓶颈，并帮助开发者找出需要优化的代码段。</p><p>Trace 通过在代码中插入标记点（Trace Point），来记录应用程序的执行过程，包括方法调用、线程切换等等。这些标记点可以帮助开发者了解应用程序的运行状态，比如执行时间、调用顺序、线程运行情况等等。</p><p>Trace 特别适用于 Android 应用与系统级的分析场景，用它可以诊断：函数调用链、Binder 调用时的调用链、跨进程事件流等复杂场景。</p><p>Android 系统中，一些重要的模块都已经默认插入了一些 Trace Point，通过 Trace Tag 来分类，例如：</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">ATRACE_TAG_NEVER</span>            <span class="token expression"><span class="token number">0</span>       </span><span class="token comment">// This tag is never enabled.</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">ATRACE_TAG_ALWAYS</span>           <span class="token expression"><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">&lt;&lt;</span><span class="token number">0</span><span class="token punctuation">)</span>  </span><span class="token comment">// This tag is always enabled.</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">ATRACE_TAG_GRAPHICS</span>         <span class="token expression"><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">&lt;&lt;</span><span class="token number">1</span><span class="token punctuation">)</span></span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">ATRACE_TAG_INPUT</span>            <span class="token expression"><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">&lt;&lt;</span><span class="token number">2</span><span class="token punctuation">)</span></span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">ATRACE_TAG_VIEW</span>             <span class="token expression"><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">&lt;&lt;</span><span class="token number">3</span><span class="token punctuation">)</span></span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">ATRACE_TAG_WEBVIEW</span>          <span class="token expression"><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">&lt;&lt;</span><span class="token number">4</span><span class="token punctuation">)</span></span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">ATRACE_TAG_WINDOW_MANAGER</span>   <span class="token expression"><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">&lt;&lt;</span><span class="token number">5</span><span class="token punctuation">)</span></span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">ATRACE_TAG_ACTIVITY_MANAGER</span> <span class="token expression"><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">&lt;&lt;</span><span class="token number">6</span><span class="token punctuation">)</span></span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">ATRACE_TAG_SYNC_MANAGER</span>     <span class="token expression"><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">&lt;&lt;</span><span class="token number">7</span><span class="token punctuation">)</span></span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">ATRACE_TAG_AUDIO</span>            <span class="token expression"><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">&lt;&lt;</span><span class="token number">8</span><span class="token punctuation">)</span></span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">ATRACE_TAG_VIDEO</span>            <span class="token expression"><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">&lt;&lt;</span><span class="token number">9</span><span class="token punctuation">)</span></span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">ATRACE_TAG_CAMERA</span>           <span class="token expression"><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">&lt;&lt;</span><span class="token number">10</span><span class="token punctuation">)</span></span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">ATRACE_TAG_HAL</span>              <span class="token expression"><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">&lt;&lt;</span><span class="token number">11</span><span class="token punctuation">)</span></span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">ATRACE_TAG_APP</span>              <span class="token expression"><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">&lt;&lt;</span><span class="token number">12</span><span class="token punctuation">)</span></span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">ATRACE_TAG_RESOURCES</span>        <span class="token expression"><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">&lt;&lt;</span><span class="token number">13</span><span class="token punctuation">)</span></span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">ATRACE_TAG_DALVIK</span>           <span class="token expression"><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">&lt;&lt;</span><span class="token number">14</span><span class="token punctuation">)</span></span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">ATRACE_TAG_RS</span>               <span class="token expression"><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">&lt;&lt;</span><span class="token number">15</span><span class="token punctuation">)</span></span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">ATRACE_TAG_BIONIC</span>           <span class="token expression"><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">&lt;&lt;</span><span class="token number">16</span><span class="token punctuation">)</span></span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">ATRACE_TAG_POWER</span>            <span class="token expression"><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">&lt;&lt;</span><span class="token number">17</span><span class="token punctuation">)</span></span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">ATRACE_TAG_PACKAGE_MANAGER</span>  <span class="token expression"><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">&lt;&lt;</span><span class="token number">18</span><span class="token punctuation">)</span></span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">ATRACE_TAG_SYSTEM_SERVER</span>    <span class="token expression"><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">&lt;&lt;</span><span class="token number">19</span><span class="token punctuation">)</span></span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">ATRACE_TAG_DATABASE</span>         <span class="token expression"><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">&lt;&lt;</span><span class="token number">20</span><span class="token punctuation">)</span></span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">ATRACE_TAG_NETWORK</span>          <span class="token expression"><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">&lt;&lt;</span><span class="token number">21</span><span class="token punctuation">)</span></span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">ATRACE_TAG_ADB</span>              <span class="token expression"><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">&lt;&lt;</span><span class="token number">22</span><span class="token punctuation">)</span></span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">ATRACE_TAG_VIBRATOR</span>         <span class="token expression"><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">&lt;&lt;</span><span class="token number">23</span><span class="token punctuation">)</span></span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">ATRACE_TAG_AIDL</span>             <span class="token expression"><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">&lt;&lt;</span><span class="token number">24</span><span class="token punctuation">)</span></span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">ATRACE_TAG_NNAPI</span>            <span class="token expression"><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">&lt;&lt;</span><span class="token number">25</span><span class="token punctuation">)</span></span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">ATRACE_TAG_RRO</span>              <span class="token expression"><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">&lt;&lt;</span><span class="token number">26</span><span class="token punctuation">)</span></span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">ATRACE_TAG_THERMAL</span>          <span class="token expression"><span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">&lt;&lt;</span> <span class="token number">27</span><span class="token punctuation">)</span></span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">ATRACE_TAG_LAST</span>             <span class="token expression">ATRACE_TAG_THERMAL</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这些TAG可以使用如下工具记录：</p><ul><li>Framework Java 层的 Trace Point 通过 android.os.Trace 类完成。</li><li>Framework Native 层的 Trace Point 通过 ATrace 宏完成。</li><li>App 开发者可以通过 android.os.Trace 类自定义 Trace。</li></ul><p>Trace 是 Android 开发中非常实用的性能分析工具，它可以帮助开发者快速定位应用程序中的性能瓶颈，从而优化代码，提高应用程序的性能。</p><h2 id="android中用于可观测技术的工具" tabindex="-1"><a class="header-anchor" href="#android中用于可观测技术的工具" aria-hidden="true">#</a> Android中用于可观测技术的工具</h2><p>Android 中有很多工具可以收集和分析性能数据，这里先描述一下这些工具之间的关系，让读者有个大概的印象：</p><ul><li>Android Profiler：是 Android Studio 提供的一款集成分析工具，可以分析 CPU、内存、网络等性能指标。它使用了其他底层工具（如 Systrace、Simpleperf、Java/Kotlin Method Trace）来收集和展示数据。</li><li>Perfetto：是一个跨平台的性能分析框架，可以捕获详细的系统和应用级别事件数据。它可以通过 atrace、ftrace 等底层工具收集数据，然后在 Perfetto UI 中进行可视化分析。</li><li>Systrace：是 Android 系统提供的一款性能分析工具，它通过 atrace 和 ftrace 收集系统级别的事件数据，帮助开发者了解应用程序与系统资源的交互情况。</li><li>Simpleperf：是一个基于 Linux Perf 工具的 Android 性能分析工具，专注于收集 CPU 性能数据。它可以与 Android Profiler 集成，提供更加详细的 CPU 分析信息。</li><li>atrace：是 Android 系统提供的一个底层性能分析工具，它通过收集内核中的 ftrace 数据和 Android Framework 中的事件数据，提供了丰富的系统和应用级别信息。atrace 可以为 Systrace 和 Perfetto 提供数据。</li><li>ftrace：是 Linux 内核提供的一个内核级别的性能分析框架，可以收集各种内核事件和数据。atrace 和 Systrace 都是基于 ftrace 构建的。</li></ul><p>总的来说，Android Profiler、Perfetto、Systrace 是性能分析工具，而 Simpleperf、atrace、ftrace 是底层数据收集工具。Android Profiler 和 Systrace 会使用 atrace、ftrace 等工具收集数据，Perfetto 则可以使用 atrace 和其他数据源。这些工具的协作关系可以形成一个层次结构，上层工具依赖于底层工具收集数据进行性能分析。</p>`,39),g={id:"android-profiler",tabindex:"-1"},b=n("a",{class:"header-anchor",href:"#android-profiler","aria-hidden":"true"},"#",-1),A={href:"https://developer.android.com/studio/profile/android-profiler",target:"_blank",rel:"noopener noreferrer"},T=n("blockquote",null,[n("p",null,"Android Studio Electric Eel | 2022.1.1 Patch 2")],-1),y=n("p",null,"Android Profiler是Android Studio集成的一款强大的性能分析工具，可以帮助开发者分析和优化应用程序在Android设备上的性能。",-1),E=n("p",null,"目前 Android Profiler 已经集成了 4 类性能分析工具： CPU、Memory、Network、Battery，其中 CPU 相关性能分析工具为 CPU Profiler，它把 CPU 相关的性能分析工具都集成在了一起，开发者可以根据自己需求来选择使用哪一个。",-1),C=n("p",null,"鉴于已经有一些独立的 CPU 性能分析工具，如 Perfetto、Simpleperf、Java Method Trace 等，目前 CPU Profiler 做法就是从这些已知的工具中获取数据，然后把数据解析成自己想要的样式，通过统一的界面展示出来。",-1),w=n("p",null,[n("img",{src:i,alt:"android-profiler"})],-1),P={href:"https://developer.android.google.cn/studio/profile/record-traces#configurations",target:"_blank",rel:"noopener noreferrer"},R=t('<ul><li><strong>Callstack Simple</strong>：它使用 Simpleperf 采样 Java/Kotlin 和 Native 代码。</li></ul><blockquote><p>Samples java/kotlin and native code using Simpleperf</p></blockquote><p>Simpleperf 是一个性能分析工具，可以帮助开发人员在 Android 设备上获取应用程序的CPU、内存和I/O使用情况。它支持多种性能分析技术，包括采样和跟踪。当在 Android Profiler 使用 Callstack Simple 时，Simpleperf 会使用采样技术来获取应用程序中 Java/Kotlin 和 Native 代码的调用栈信息。</p><p>Simpleperf 的采样技术是通过在应用程序进程中插入信号处理程序来实现的。当进程接收到特定的信号（例如SIGPROF）时，处理程序会中断应用程序的执行，并获取当前线程的调用栈信息。这些采样数据可以保存到文件中，供 Android Profiler 的 Callstack Simple 分析和显示。</p><p>下面是为Andorid系统的setting应用的列表界面录制一段<strong>Callstack Simple</strong>信息，下面是截图结果，分别为MainThread、RenderThread：</p><p><img src="'+l+'" alt="android-profiler-callstack-sample-scroll-mainthread-setting-app"><img src="'+d+'" alt="android-profiler-callstack-sample-scroll-renderthread-setting-app"></p>',6),S={href:"https://developer.android.com/topic/performance/tracing",target:"_blank",rel:"noopener noreferrer"},q=n("strong",null,"System Trace",-1),x=n("blockquote",null,[n("p",null,"Traces Java/Kotlin and native code at the Android platform level")],-1),G=n("blockquote",null,[n("p",null,"引用自官方文档：捕获非常翔实的细节，以便您检查应用与系统资源的交互情况。您可以检查线程状态的确切时间和持续时间、直观地查看所有内核的 CPU 瓶颈在何处，并添加需分析的自定义轨迹事件。当您排查性能问题时，此类信息至关重要。")],-1),M=n("p",null,"Android平台提供了几种不同的选项来捕获或生成系统跟踪信息（trace file）：",-1),I={href:"https://developer.android.com/studio/profile/android-profiler",target:"_blank",rel:"noopener noreferrer"},U={href:"https://developer.android.com/topic/performance/tracing/on-device",target:"_blank",rel:"noopener noreferrer"},L={href:"https://perfetto.dev/",target:"_blank",rel:"noopener noreferrer"},D={href:"https://source.android.com/docs/core/tests/debug/systrace",target:"_blank",rel:"noopener noreferrer"},N=t('<p>下面是为Andorid系统的setting应用的列表界面录制一段<strong>System Trace</strong>信息，下面是截图结果：</p><p><img src="'+u+'" alt=""></p><ul><li><strong>Java/Kotlin Method Trace</strong>：它是从虚拟机获取函数调用栈信息，用于分析 Java 函数调用和耗时情况。请注意，使用此方法会有很高的开销，致使获取的耗时信息是不准确的。</li></ul><blockquote><p>Instruments Java/Kotlin code using Android Runtime, tracking every method call (this incurs high overhead making timing information inaccurate)</p></blockquote><blockquote><p>引用自官方文档：在运行时检测应用，从而在每个方法调用开始和结束时记录一个时间戳。系统会收集并比较这些时间戳，以生成方法跟踪数据，包括时间信息和 CPU 使用率。 请注意，与检测每个方法相关的开销会影响运行时性能，并且可能会影响分析数据；对于生命周期相对较短的方法，这一点更为明显。此外，如果应用在短时间内执行大量方法，则分析器可能很快就会超出其文件大小限制，因而不能再记录更多跟踪数据。</p></blockquote><p>下面是为Andorid系统的setting应用的列表界面录制一段<strong>Java/Kotlin Method Trace</strong>信息，下面是截图结果：</p><p><img src="'+k+'" alt=""></p><ul><li><strong>Java/Kotlin Method Sample</strong>：在应用的 Java 代码执行期间，采样获取应用的调用堆栈。已经不再推荐使用。</li></ul><blockquote><p>legacy。Sample Java/Kotlin code using Android Runtime</p></blockquote><blockquote><p>引用自官方文档：应用的 Java 代码执行期间，频繁捕获应用的调用堆栈。分析器会比较捕获的数据集，以推导与应用的 Java 代码执行有关的时间和资源使用信息。 基于采样的跟踪存在一个固有的问题，那就是如果应用在捕获调用堆栈后进入一个方法并在下次捕获前退出该方法，性能分析器将不会记录该方法调用。如果您想要跟踪生命周期如此短的方法，应使用插桩跟踪。</p></blockquote><p>下面是为Andorid系统的setting应用的列表界面录制一段<strong>Java/Kotlin Method Sample</strong>信息，下面是截图结果：</p><p><img src="'+m+'" alt=""></p><p>通过对比<strong>Java/Kotlin Method Sample</strong>与<strong>Java/Kotlin Method Trace</strong>，可以看到前者由于采样的原因，缺少了很多调用细节。</p>',13),V={id:"perfetto",tabindex:"-1"},B=n("a",{class:"header-anchor",href:"#perfetto","aria-hidden":"true"},"#",-1),O={href:"https://perfetto.dev/",target:"_blank",rel:"noopener noreferrer"},J=t('<blockquote><p>建议在运行Android 10及更高版本的设备上使用Perfetto。</p></blockquote><p><img src="'+h+'" alt="fluency-tools-perfetto"></p><p>Perfetto 是 Android 10 中引入的平台级跟踪工具。这是适用于 Android、Linux 和 Chrome 的成熟开源跟踪项目。与 Systrace 不同，它提供数据源超集，可让以协议缓冲区二进制流形式记录任意长度的跟踪记录。可以在 Perfetto 界面中打开这些跟踪记录。</p><p>Perfetto 相比 Systrace 最大的改进是可以支持长时间数据抓取，这是得益于它有一个可在后台运行的服务，通过它实现了对收集上来的数据进行 Protobuf 的编码并存盘。</p><p>Perfetto 使用不同的来源从设备中收集性能跟踪数据，包括：</p><ul><li>使用 ftrace 收集内核信息。</li><li>使用 Atrace 收集服务和应用中的 trace point 信息。</li><li>使用 heapprofd 收集服务和应用程序的本地内存使用信息。</li></ul><p>Perfetto 所支持的数据类型、获取方法，以及分析方式上也是前所未有的全面，它几乎支持所有的类型与方法。数据类型上通过 ATRACE 实现了 Trace 类型支持，通过可定制的节点读取机制实现了 Metric 类型的支持，在 UserDebug 版本上通过获取 Logd 数据实现了 Log 类型的支持。</p><p>在数据抓取层面，可以通过 Perfetto.dev 网页、命令行工具手动触发抓取与结束，通过设置中的开发者选项触发长时间抓取，甚至可以通过框架中提供的 Perfetto Trigger API 来动态开启数据抓取，基本上涵盖了我们在项目上能遇到的所有的情境。</p><p>在数据分析层面，Perfetto 提供了类似 Systrace 操作的数据可视化分析网页，但底层实现机制完全不同，最大的好处是可以支持超大文件的渲染，这是 Systrace 做不到的（超过 300M 以上时可能会崩溃、可能会超卡）。</p><p>Perfetto 是继Systrace之后新一代的性能分析工具，未来会完全取代 Systrace。</p><p>本系列的大部分文章都会从Perfetto这个工具的视角进行分析，其使用方法后续文章会详细介绍。</p>',11),K={id:"systrace",tabindex:"-1"},W=n("a",{class:"header-anchor",href:"#systrace","aria-hidden":"true"},"#",-1),j={href:"https://source.android.com/docs/core/tests/debug/systrace",target:"_blank",rel:"noopener noreferrer"},z=t('<blockquote><p>Systrace 适用于所有Android 4.3（API级别18）及更高版本的平台，但建议在运行Android 10及更高版本的设备上使用Perfetto。</p></blockquote><p><img src="'+_+'" alt="fluency-tools-systrace"></p><p>Systrace 是一个传统的平台提供的命令行工具，它可以在短时间内记录设备活动并生成一个压缩的文本文件。该工具会产生一个报告，结合了来自 Android 内核的数据，例如CPU调度程序、磁盘活动和应用程序线程等。</p><p>Systrace 是多种其他工具的封装容器：它是 atrace 的主机端封装容器。</p><ul><li>atrace 用于控制用户应用的 trace point 和设置 ftrace。</li><li>ftrace 是 Linux 内核提供的一个跟踪工具，可以追踪内核中各个模块的调用情况和性能瓶颈，包括CPU调度、进程间通信、内存管理等方面。</li><li>Systrace 使用 atrace 来启用 trace ，其在 Android 系统内核中使用 ftrace 功能，记录各个组件的调用情况并将其输出到文本文件中，最终生成可视化的性能分析报告。</li></ul><p>Systrace 通过在 Android 系统的各个组件中插入调用跟踪代码（Trace Point）来捕获性能数据，并使用 ftrace 收集和处理这些数据。通过分析这些数据，可以得出应用程序在运行时的行为和性能瓶颈，帮助开发人员进行调试和优化。</p><p>在 Android 系统中，一些重要的模块都已经默认插入了一些 Trace Point，通过 Trace Tag 来分类，例如：系统的一些关键操作（比如 Touch 操作、Power 按钮、滑动操作等）、系统机制（input 分发、View 绘制、进程间通信、进程管理机制等）、软硬件信息（CPU 频率信息、CPU 调度信息、磁盘信息、内存信息等）的等模块上都有Trace Point。</p><p>Systrace 还可以通过Android Debug Bridge（ADB）与设备进行通信，收集设备运行时的各种信息，例如CPU、内存、网络等数据。它可以对这些数据进行过滤和排序，以提供开发人员更精细的性能分析。</p><p>对于 Android 开发者来说，Systrace 最大的作用就是把整个 Android 系统的运行状态，从黑盒变成了白盒。全局性和可视化使得 Systrace 成为 Android 开发者在分析复杂的性能问题的时候的首选。</p><p><strong>Systrace 和 atrace 和 ftrace 之间的关系</strong>：</p><ul><li>ftrace：是一个内核函数跟踪器，function tracer，旨在帮助开发人员和系统设计者可以找到内核内部发生的事情。为数据采集部分。</li><li>atrace：Android tracer，使用ftrace来跟踪Android上层的函数调用。为数据采集部分。</li><li>systrace：Android 的 trace 数据分析工具，将 atrace 采集上来的数据，以图形化的方式展现出来。</li></ul>',11),F={id:"simpleperf",tabindex:"-1"},H=n("a",{class:"header-anchor",href:"#simpleperf","aria-hidden":"true"},"#",-1),Y={href:"https://developer.android.com/ndk/guides/simpleperf",target:"_blank",rel:"noopener noreferrer"},Q={href:"https://android.googlesource.com/platform/system/extras/+/master/simpleperf/doc/README.md",target:"_blank",rel:"noopener noreferrer"},X=n("p",null,"Simpleperf 是一种 Native CPU 分析工具，可用于分析 Android 应用程序和运行在 Android 上的 Native 进程。它能够分析 Android 上的 Java 和 C++ 代码。Simpleperf 的设计目的是提供一种轻量级的、易于使用的工具，用于解决 Android 性能分析中的常见问题。",-1),Z=n("p",null,"Simpleperf 主要功能分为事件摘要（stat），记录样本(record)和生成数据报告(report)三个功能。stat功能给出了在一个时间段内被分析的进程中发生了多少事件的摘要。record功能必须在Android系统中运行，当 Simpleperf 运行分析时会不断将数据写入到性能数据文件，所以它可以随时停止，随时拷贝分析数据文件。分析完毕后我们可以需要将输出数据文件拷贝到PC上，再使用report功能解析成数据报告。",-1),$=n("p",null,"现代CPU具有一个硬件组件，称为性能监控单元(PMU)。PMU具有一些硬件计数器，计数一些诸如经历了多少次CPU周期，执行了多少条指令，或发生了多少次缓存未命中等事件。Linux内核将这些硬件计数器包装到硬件perf事件 (hardware perf events)中。此外，Linux内核还提供了独立于硬件的软件事件和跟踪点事件。Linux内核通过 perf_event_open 系统调用将这些都暴露给了用户空间，这正是 Simpleperf 所使用的机制。",-1),nn={id:"atrace",tabindex:"-1"},sn=n("a",{class:"header-anchor",href:"#atrace","aria-hidden":"true"},"#",-1),an={href:"https://perfetto.dev/docs/data-sources/atrace",target:"_blank",rel:"noopener noreferrer"},en=t(`<p>atrace 是 Android 系统中的一个命令行工具，用于跟踪和分析系统各种事件，例如CPU使用情况、内存分配、输入事件等等。它可以帮助开发者分析应用程序和系统的性能瓶颈，定位问题和优化代码。</p><p>atrace 通过连接到设备并使用 adb shell 命令来执行跟踪和分析操作，可以生成包含跟踪数据的日志文件，然后使用专业工具进行分析。</p><p>atrace 它允许开发人员在应用程序代码中插入时间戳和注释，以便在跟踪文件中显示。要使用 atrace，需要在设备上启用开发者选项，并使用命令行工具将设备连接到计算机上。然后，可以使用以下命令在跟踪文件中启用和禁用 atrace：</p><ul><li>启用：<code>adb shell atrace --async_start &lt;category&gt;</code></li><li>禁用：<code>adb shell atrace --async_stop</code></li><li>其中，<code>&lt;category&gt;</code>参数指定要跟踪的类别，例如gfx（图形）、input（输入）或view（视图）。跟踪文件将保存在设备上，可以使用类似于adb pull的命令将其下载到计算机上进行分析。</li></ul><p>atrace (frameworks/native/cmds/atrace) 使用 ftrace 捕获内核事件，使用 adb 在设备上运行 atrace。atrace 会执行以下操作：</p><ul><li>通过设置属性 (debug.atrace.tags.enableflags) 来设置用户模式跟踪。</li><li>通过写入相应的 ftrace sysfs 节点来启用所需的 ftrace 功能。不过，由于 ftrace 支持的功能更多，您可以自行设置一些 sysfs 节点，然后使用 atrace。</li></ul><p>atrace 所支持的 category:</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>         gfx - Graphics
       input - Input
        view - View System
     webview - WebView
          wm - Window Manager
          am - Activity Manager
          sm - Sync Manager
       audio - Audio
       video - Video
      camera - Camera
         hal - Hardware Modules
         app - Application
         res - Resource Loading
      dalvik - Dalvik VM
          rs - RenderScript
      bionic - Bionic C Library
       power - Power Management
          pm - Package Manager
          ss - System Server
    database - Database
     network - Network
         adb - ADB
         pdx - PDX services
       sched - CPU Scheduling
         irq - IRQ Events
         i2c - I2C Events
        freq - CPU Frequency
        idle - CPU Idle
        disk - Disk I/O
         mmc - eMMC commands
       workq - Kernel Workqueues
  regulators - Voltage and Current Regulators
  binder_driver - Binder Kernel driver
  binder_lock - Binder global lock trace
   pagecache - Page cache
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,8),tn={href:"https://cs.android.com/android/platform/superproject/+/master:frameworks/native/cmds/atrace/atrace.cpp",target:"_blank",rel:"noopener noreferrer"},on=t(`<div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code>
<span class="token comment">/* Tracing categories */</span>
<span class="token keyword">static</span> <span class="token keyword">const</span> TracingCategory k_categories<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token punctuation">{</span> <span class="token string">&quot;gfx&quot;</span><span class="token punctuation">,</span>        <span class="token string">&quot;Graphics&quot;</span><span class="token punctuation">,</span>                 ATRACE_TAG_GRAPHICS<span class="token punctuation">,</span> <span class="token punctuation">{</span>
        <span class="token punctuation">{</span> OPT<span class="token punctuation">,</span>      <span class="token string">&quot;events/gpu_mem/gpu_mem_total/enable&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> <span class="token string">&quot;input&quot;</span><span class="token punctuation">,</span>      <span class="token string">&quot;Input&quot;</span><span class="token punctuation">,</span>                    ATRACE_TAG_INPUT<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> <span class="token string">&quot;view&quot;</span><span class="token punctuation">,</span>       <span class="token string">&quot;View System&quot;</span><span class="token punctuation">,</span>              ATRACE_TAG_VIEW<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> <span class="token string">&quot;wm&quot;</span><span class="token punctuation">,</span>         <span class="token string">&quot;Window Manager&quot;</span><span class="token punctuation">,</span>           ATRACE_TAG_WINDOW_MANAGER<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> <span class="token string">&quot;am&quot;</span><span class="token punctuation">,</span>         <span class="token string">&quot;Activity Manager&quot;</span><span class="token punctuation">,</span>         ATRACE_TAG_ACTIVITY_MANAGER<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> <span class="token string">&quot;sm&quot;</span><span class="token punctuation">,</span>         <span class="token string">&quot;Sync Manager&quot;</span><span class="token punctuation">,</span>             ATRACE_TAG_SYNC_MANAGER<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> <span class="token string">&quot;video&quot;</span><span class="token punctuation">,</span>      <span class="token string">&quot;Video&quot;</span><span class="token punctuation">,</span>                    ATRACE_TAG_VIDEO<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> <span class="token string">&quot;camera&quot;</span><span class="token punctuation">,</span>     <span class="token string">&quot;Camera&quot;</span><span class="token punctuation">,</span>                   ATRACE_TAG_CAMERA<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> <span class="token string">&quot;hal&quot;</span><span class="token punctuation">,</span>        <span class="token string">&quot;Hardware Modules&quot;</span><span class="token punctuation">,</span>         ATRACE_TAG_HAL<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> <span class="token string">&quot;res&quot;</span><span class="token punctuation">,</span>        <span class="token string">&quot;Resource Loading&quot;</span><span class="token punctuation">,</span>         ATRACE_TAG_RESOURCES<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> <span class="token string">&quot;dalvik&quot;</span><span class="token punctuation">,</span>     <span class="token string">&quot;Dalvik VM&quot;</span><span class="token punctuation">,</span>                ATRACE_TAG_DALVIK<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> <span class="token string">&quot;rs&quot;</span><span class="token punctuation">,</span>         <span class="token string">&quot;RenderScript&quot;</span><span class="token punctuation">,</span>             ATRACE_TAG_RS<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> <span class="token string">&quot;bionic&quot;</span><span class="token punctuation">,</span>     <span class="token string">&quot;Bionic C Library&quot;</span><span class="token punctuation">,</span>         ATRACE_TAG_BIONIC<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> <span class="token string">&quot;power&quot;</span><span class="token punctuation">,</span>      <span class="token string">&quot;Power Management&quot;</span><span class="token punctuation">,</span>         ATRACE_TAG_POWER<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> <span class="token string">&quot;pm&quot;</span><span class="token punctuation">,</span>         <span class="token string">&quot;Package Manager&quot;</span><span class="token punctuation">,</span>          ATRACE_TAG_PACKAGE_MANAGER<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> <span class="token string">&quot;ss&quot;</span><span class="token punctuation">,</span>         <span class="token string">&quot;System Server&quot;</span><span class="token punctuation">,</span>            ATRACE_TAG_SYSTEM_SERVER<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>

    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>atrace 和 ftrace 之间的关系</strong>：</p><ul><li>ftrace：是一个内核函数跟踪器，function tracer，旨在帮助开发人员和系统设计者可以找到内核内部发生的事情。为数据采集部分。</li><li>atrace：Android tracer，使用ftrace来跟踪Android上层的函数调用。为数据采集部分。</li></ul>`,3),pn={id:"ftrace",tabindex:"-1"},rn=n("a",{class:"header-anchor",href:"#ftrace","aria-hidden":"true"},"#",-1),cn={href:"https://source.android.google.cn/docs/core/tests/debug/ftrace?hl=zh-cn",target:"_blank",rel:"noopener noreferrer"},ln=n("p",null,"ftrace 是Linux内核中的一种跟踪工具，它可以用于收集和分析内核和用户空间的各种跟踪数据。它可以帮助开发人员了解系统运行的细节，从而优化应用程序的性能。",-1),dn=n("p",null,"ftrace 是Linux内核中的一个跟踪框架，它的实现原理如下：",-1),un=n("ul",null,[n("li",null,"ftrace利用Linux内核中的动态追踪技术，通过在内核中插入一些跟踪点（trace point）来捕获系统的事件，例如函数调用、中断发生、进程调度等。这些跟踪点可以手动添加或者自动产生。"),n("li",null,"ftrace 提供了多种跟踪器（tracer），例如函数图（function graph）、系统调用（syscall）、模块加载（module）等，可以根据不同的需求选择合适的跟踪器进行跟踪。"),n("li",null,"ftrace 还提供了多种输出方式，例如ring buffer、trace_pipe、trace_file等，可以将跟踪数据输出到不同的位置，方便用户进行分析。"),n("li",null,"ftrace 的跟踪功能可以通过/sys/kernel/debug/tracing目录下的文件进行配置和控制。例如，可以通过设置tracing_on文件来启用或停用跟踪功能；可以通过设置tracing_thresh文件来调整跟踪事件的阈值。"),n("li",null,"ftrace 还支持对用户态进程进行跟踪，用户可以通过系统调用（例如perf_event_open）来注册自己的跟踪点，并将跟踪数据输出到ftrace中进行分析。")],-1),kn=n("p",null,"在Android中，ftrace 可以作为 Systrace、Perfetto、Simpleperf 的数据源。",-1),mn={id:"traceview",tabindex:"-1"},hn=n("a",{class:"header-anchor",href:"#traceview","aria-hidden":"true"},"#",-1),_n={href:"https://developer.android.com/studio/profile/traceview",target:"_blank",rel:"noopener noreferrer"},vn=t('<blockquote><p>Traceview is deprecated</p></blockquote><p>Traceview 是 Android SDK 中的一个性能分析工具，它用于分析 Android 应用的代码执行性能。Traceview 可以帮助开发者在开发应用的过程中找到应用性能问题，并提供详细的信息，以便开发者更好地了解应用在设备上的执行情况。</p><p>Traceview 支持两种类型的跟踪：方法调用跟踪和时间轴跟踪。方法调用跟踪提供了方法级别的性能分析，可以展示每个方法被调用的次数、执行时间和 CPU 占用率等信息。时间轴跟踪提供了更全面的视图，包括线程执行情况、锁的等待和释放、GC 等事件。</p><p>使用 Traceview 可以很方便地找到应用中耗时的方法或者线程，并且可以与代码结合使用，帮助优化应用的性能。Traceview 已经被新的 Android Profiler 工具替代，但仍然可以在老版本的 Android Studio 中使用。</p><h2 id="android中可观测性技术工具的应用场景" tabindex="-1"><a class="header-anchor" href="#android中可观测性技术工具的应用场景" aria-hidden="true">#</a> Android中可观测性技术工具的应用场景</h2><p>我们可以利用上述这些工具来分析应用的性能问题：</p><ul><li>从技术角度来说，可用于分析响应速度 、卡顿丢帧、 ANR这些类别。</li><li>从用户角度来说，可用于分析用户遇到的性能问题，包括但不限于: <ul><li>应用启动速度问题，包括冷启动、热启动、温启动。</li><li>界面跳转速度慢、跳转动画卡顿。</li><li>其他非跳转的点击操作慢（开关、弹窗、长按、选择等）。</li><li>亮灭屏速度慢、开关机慢、解锁慢、人脸识别慢等。</li><li>列表滑动卡顿。</li><li>窗口动画卡顿。</li><li>界面加载卡顿。</li><li>整机卡顿。</li><li>App 点击无响应、卡死闪退。</li></ul></li></ul><h2 id="引用" tabindex="-1"><a class="header-anchor" href="#引用" aria-hidden="true">#</a> 引用</h2>',8),fn={href:"https://zhuanlan.zhihu.com/p/593844343",target:"_blank",rel:"noopener noreferrer"},gn={href:"https://www.androidperformance.com/2022/01/07/The-Performace-1-Performance-Tools/",target:"_blank",rel:"noopener noreferrer"},bn={href:"https://www.cnblogs.com/DataFlux/p/15343529.html",target:"_blank",rel:"noopener noreferrer"},An={href:"https://juejin.cn/post/7110142192928161823#heading-10",target:"_blank",rel:"noopener noreferrer"},Tn={href:"https://juejin.cn/post/7073727491000664095",target:"_blank",rel:"noopener noreferrer"},yn={href:"https://www.splunk.com/en_us/data-insider/what-is-observability.html",target:"_blank",rel:"noopener noreferrer"},En={href:"https://www.techtarget.com/searchitoperations/definition/observability",target:"_blank",rel:"noopener noreferrer"},Cn={href:"https://developer.android.com/topic/performance/tracing?hl=zh-cn",target:"_blank",rel:"noopener noreferrer"},wn={href:"https://source.android.com/docs/core/tests/debug/eval_perf",target:"_blank",rel:"noopener noreferrer"},Pn={href:"https://androidperformance.com/2022/01/07/The-Performace-1-Performance-Tools",target:"_blank",rel:"noopener noreferrer"},Rn={href:"https://developer.android.com/agi/sys-trace/system-profiler",target:"_blank",rel:"noopener noreferrer"},Sn={href:"https://developer.android.com/topic/performance/tracing",target:"_blank",rel:"noopener noreferrer"},qn={href:"https://developer.android.com/studio/command-line/perfetto",target:"_blank",rel:"noopener noreferrer"},xn={href:"https://developer.android.com/studio/command-line/systrace",target:"_blank",rel:"noopener noreferrer"},Gn={href:"https://www.cnblogs.com/pyjetson/p/14946007.html",target:"_blank",rel:"noopener noreferrer"},Mn={href:"http://bcoder.com/java/android-atrace-systrace-usage-instruction",target:"_blank",rel:"noopener noreferrer"},In={href:"https://android.googlesource.com/platform/system/extras/+/master/simpleperf/doc/README.md",target:"_blank",rel:"noopener noreferrer"},Un={href:"https://blog.csdn.net/qq_38410730/article/details/103481429",target:"_blank",rel:"noopener noreferrer"},Ln={href:"http://www.luzexi.com/2020/11/13/%E5%AE%89%E5%8D%93%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E5%B7%A5%E5%85%B7Simpleperf%E8%AF%A6%E8%A7%A3",target:"_blank",rel:"noopener noreferrer"},Dn={href:"https://blog.csdn.net/tq08g2z/article/details/77311712",target:"_blank",rel:"noopener noreferrer"},Nn={href:"https://android.googlesource.com/platform/system/extras/+/master/simpleperf/README.md",target:"_blank",rel:"noopener noreferrer"},Vn={href:"https://developer.android.com/guide/topics/manifest/profileable-element",target:"_blank",rel:"noopener noreferrer"},Bn={href:"https://zhuanlan.zhihu.com/p/25277481",target:"_blank",rel:"noopener noreferrer"},On={href:"https://blog.openresty.com.cn/cn/dynamic-tracing/",target:"_blank",rel:"noopener noreferrer"},Jn={href:"https://github.com/brendangregg/FlameGraph",target:"_blank",rel:"noopener noreferrer"},Kn={href:"http://aospxref.com/",target:"_blank",rel:"noopener noreferrer"},Wn={href:"https://android.googlesource.com/platform/system/extras/+/master/simpleperf/demo/README.md",target:"_blank",rel:"noopener noreferrer"},jn=n("h2",{id:"版权声明",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#版权声明","aria-hidden":"true"},"#"),s(" 版权声明")],-1),zn={href:"https://creativecommons.org/licenses/by-nc/4.0/",target:"_blank",rel:"noopener noreferrer"};function Fn(Hn,Yn){const a=p("ExternalLinkIcon");return r(),c("div",null,[f,n("h3",g,[b,s(),n("a",A,[s("Android Profiler"),e(a)])]),T,y,E,C,w,n("p",null,[n("a",P,[s("CPU Profiler"),e(a)]),s(" 集成了性能分析工具：Perfetto、Simpleperf、Java Method Trace，它具备了这些工具的全部或部分功能，如下：")]),R,n("ul",null,[n("li",null,[n("a",S,[q,e(a)]),s("：记录设备活动在短时间内的行为被称为系统跟踪（System Trace）。系统跟踪会生成一个跟踪文件（trace file），该文件可用于生成系统报告（可被Android Profiler、Perfetto、Systrace界面展示）。")])]),x,G,M,n("ul",null,[n("li",null,[n("a",I,[s("Android Studio CPU profiler - System Trace"),e(a)]),s("，也就是当前我们介绍的这种。")]),n("li",null,[n("a",U,[s("System tracing utility"),e(a)]),s("，使用系统自带的工具。")]),n("li",null,[n("a",L,[s("Perfetto"),e(a)]),s(" command-line tool (Android 10 and higher)，新一代性能分析工具。")]),n("li",null,[n("a",D,[s("Systrace"),e(a)]),s(" command-line tool，老一代性能分析工具。")])]),N,n("h3",V,[B,s(),n("a",O,[s("Perfetto"),e(a)])]),J,n("h3",K,[W,s(),n("a",j,[s("Systrace"),e(a)])]),z,n("h3",F,[H,s(),n("a",Y,[s("Simpleperf"),e(a)])]),n("blockquote",null,[n("p",null,[n("a",Q,[s("https://android.googlesource.com/platform/system/extras/+/master/simpleperf/doc/README.md"),e(a)]),s(" 支持的 Android 版本为L及以上")])]),X,Z,$,n("h3",nn,[sn,s(),n("a",an,[s("atrace"),e(a)])]),en,n("p",null,[s("atrace的category与tag之间的关系如下，"),n("a",tn,[s("源代码"),e(a)]),s("：")]),on,n("h3",pn,[rn,s(),n("a",cn,[s("ftrace"),e(a)])]),ln,dn,un,kn,n("h3",mn,[hn,s(),n("a",_n,[s("Traceview"),e(a)])]),vn,n("ul",null,[n("li",null,[n("a",fn,[s("https://zhuanlan.zhihu.com/p/593844343"),e(a)])]),n("li",null,[n("a",gn,[s("https://www.androidperformance.com/2022/01/07/The-Performace-1-Performance-Tools/"),e(a)])]),n("li",null,[n("a",bn,[s("https://www.cnblogs.com/DataFlux/p/15343529.html"),e(a)])]),n("li",null,[n("a",An,[s("https://juejin.cn/post/7110142192928161823#heading-10"),e(a)])]),n("li",null,[n("a",Tn,[s("https://juejin.cn/post/7073727491000664095"),e(a)])]),n("li",null,[n("a",yn,[s("https://www.splunk.com/en_us/data-insider/what-is-observability.html"),e(a)])]),n("li",null,[n("a",En,[s("https://www.techtarget.com/searchitoperations/definition/observability"),e(a)])]),n("li",null,[n("a",Cn,[s("https://developer.android.com/topic/performance/tracing?hl=zh-cn"),e(a)])]),n("li",null,[n("a",wn,[s("https://source.android.com/docs/core/tests/debug/eval_perf"),e(a)])]),n("li",null,[n("a",Pn,[s("https://androidperformance.com/2022/01/07/The-Performace-1-Performance-Tools"),e(a)])]),n("li",null,[n("a",Rn,[s("https://developer.android.com/agi/sys-trace/system-profiler"),e(a)])]),n("li",null,[n("a",Sn,[s("https://developer.android.com/topic/performance/tracing"),e(a)])]),n("li",null,[n("a",qn,[s("https://developer.android.com/studio/command-line/perfetto"),e(a)])]),n("li",null,[n("a",xn,[s("https://developer.android.com/studio/command-line/systrace"),e(a)])]),n("li",null,[n("a",Gn,[s("https://www.cnblogs.com/pyjetson/p/14946007.html"),e(a)])]),n("li",null,[n("a",Mn,[s("http://bcoder.com/java/android-atrace-systrace-usage-instruction"),e(a)])]),n("li",null,[n("a",In,[s("https://android.googlesource.com/platform/system/extras/+/master/simpleperf/doc/README.md"),e(a)])]),n("li",null,[n("a",Un,[s("https://blog.csdn.net/qq_38410730/article/details/103481429"),e(a)])]),n("li",null,[n("a",Ln,[s("http://www.luzexi.com/2020/11/13/安卓性能优化工具Simpleperf详解"),e(a)])]),n("li",null,[n("a",Dn,[s("https://blog.csdn.net/tq08g2z/article/details/77311712"),e(a)])]),n("li",null,[n("a",Nn,[s("https://android.googlesource.com/platform/system/extras/+/master/simpleperf/README.md"),e(a)])]),n("li",null,[n("a",Vn,[s("https://developer.android.com/guide/topics/manifest/profileable-element"),e(a)])]),n("li",null,[n("a",Bn,[s("https://zhuanlan.zhihu.com/p/25277481"),e(a)])]),n("li",null,[n("a",On,[s("https://blog.openresty.com.cn/cn/dynamic-tracing/"),e(a)])]),n("li",null,[n("a",Jn,[s("https://github.com/brendangregg/FlameGraph"),e(a)])]),n("li",null,[n("a",Kn,[s("http://aospxref.com/"),e(a)])]),n("li",null,[n("a",Wn,[s("https://android.googlesource.com/platform/system/extras/+/master/simpleperf/demo/README.md"),e(a)])])]),jn,n("p",null,[s("本文采用"),n("a",zn,[s("知识共享署名-非商业性使用 4.0 国际许可协议"),e(a)]),s("进行许可")])])}const Xn=o(v,[["render",Fn],["__file","fluency-03-observability-technology.html.vue"]]);export{Xn as default};
