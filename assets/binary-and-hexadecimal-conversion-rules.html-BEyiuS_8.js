import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{e as s,f as a,o as n}from"./app-B5gUbiTQ.js";const t={};function r(l,e){return n(),s("div",null,e[0]||(e[0]=[a(`<h1 id="帮助解释二进制和十六机制的换算规则。" tabindex="-1"><a class="header-anchor" href="#帮助解释二进制和十六机制的换算规则。"><span>帮助解释二进制和十六机制的换算规则。</span></a></h1><p>二进制（Binary）和十六进制（Hexadecimal）都是在计算机领域中最常见的数值表示方法。二进制用 0 和 1 表示数据，十六进制用 0～9 和 A～F（或 a～f）表示数据。下面我们来看看这两种进制之间是如何进行换算的。</p><hr><h2 id="_1-基本概念" tabindex="-1"><a class="header-anchor" href="#_1-基本概念"><span>1. 基本概念</span></a></h2><ol><li><p><strong>二进制（binary）</strong></p><ul><li>进制基数为 2</li><li>只有两个数字：0 和 1</li><li>每一位表示 2^n（n 从 0 开始）的权重，比如二进制数 <code>1011</code> 代表：<br> [ 1 \\times 2^3 + 0 \\times 2^2 + 1 \\times 2^1 + 1 \\times 2^0 = 8 + 0 + 2 + 1 = 11 ]</li></ul></li><li><p><strong>十六进制（hexadecimal）</strong></p><ul><li>进制基数为 16</li><li>由 0~9 和 A~F 共 16 个符号表示，其中 A~F 分别代表十进制的 10~15</li><li>每一位表示 16^n（n 从 0 开始）的权重，比如十六进制数 <code>3F</code> 代表：<br> [ 3 \\times 16^1 + F \\times 16^0<br> = 3 \\times 16 + 15 \\times 1<br> = 48 + 15<br> = 63 ]</li></ul></li></ol><hr><h2 id="_2-二进制与十六进制的换算思路" tabindex="-1"><a class="header-anchor" href="#_2-二进制与十六进制的换算思路"><span>2. 二进制与十六进制的换算思路</span></a></h2><h3 id="_2-1-二进制-→-十六进制" tabindex="-1"><a class="header-anchor" href="#_2-1-二进制-→-十六进制"><span>2.1 二进制 → 十六进制</span></a></h3><p><strong>十六进制是以 16 为基数，二进制是以 2 为基数</strong>。由于 16 = 2^4，<strong>每 4 位二进制数正好可以换算成 1 位十六进制数</strong>。因此，二进制与十六进制之间的换算非常方便，可以按照以下步骤进行：</p><ol><li><strong>从右往左，每 4 位二进制为一组</strong>（如果最左侧不足 4 位，可以在左边补 0）。</li><li><strong>将每组二进制转换成 0～15 的十进制值</strong>。</li><li><strong>把这个十进制值用 0～9 或 A～F 表示</strong>，即得到相应的十六进制数。</li></ol><p><strong>例子</strong>：将二进制 <code>1011110010</code> 转换为十六进制</p><ol><li>从右往左分组，每 4 位一组（左边不够就补零）：<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>10 1111 0010</span></span>
<span class="line"><span>补齐后：0010 1111 0010</span></span>
<span class="line"><span>分组得到： 0010 | 1111 | 0010</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li>分别把这三个分组转换为十进制数：<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>0010 -&gt; 2  </span></span>
<span class="line"><span>1111 -&gt; 15  </span></span>
<span class="line"><span>0010 -&gt; 2</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li>转为十六进制（0~9、A~F），15 = F，所以：<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>2 -&gt; 2  </span></span>
<span class="line"><span>15 -&gt; F  </span></span>
<span class="line"><span>2 -&gt; 2</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li>拼接成为十六进制数：<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>2F2</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ol><p><strong>因此，二进制 <code>1011110010</code> = 十六进制 <code>2F2</code>。</strong></p><hr><h3 id="_2-2-十六进制-→-二进制" tabindex="-1"><a class="header-anchor" href="#_2-2-十六进制-→-二进制"><span>2.2 十六进制 → 二进制</span></a></h3><p>将十六进制转换回二进制也是同样的思路：</p><ol><li><strong>把十六进制数拆成单个符号（0～F）</strong>。</li><li><strong>把每个符号转换成 4 位二进制</strong>（0 → 0000，1 → 0001，A（10） → 1010，F（15） → 1111）。</li><li><strong>最后把所有 4 位二进制片段合并</strong>，就是完整的二进制数。</li></ol><p><strong>例子</strong>：将十六进制 <code>3F</code> 转换为二进制</p><ol><li>拆分：<code>3</code> 和 <code>F</code>。</li><li>3 -&gt; 十进制为 3，对应二进制是 <code>0011</code><br> F -&gt; 十进制为 15，对应二进制是 <code>1111</code></li><li>拼接得到二进制数：<code>00111111</code>。</li></ol><p>我们也可以验证它的十进制值：<br> [ 3F_{16} = 3 \\times 16 + 15 \\times 1 = 63<br> ]<br> 而 <code>00111111</code> 的二进制数值：<br> [ 0\\times2^7 + 0\\times2^6 + 1\\times2^5 + 1\\times2^4 + 1\\times2^3 + 1\\times2^2 + 1\\times2^1 + 1\\times2^0<br> = 63<br> ]</p><hr><h2 id="_3-小结" tabindex="-1"><a class="header-anchor" href="#_3-小结"><span>3. 小结</span></a></h2><ol><li><strong>二进制和十六进制最大的特点</strong>：16 = 2^4，所以<strong>4 位二进制</strong>可<strong>直接</strong>对应<strong>1 位十六进制</strong>。</li><li><strong>二进制 → 十六进制</strong>：先将二进制按 4 位一组（不足则补 0），再把这组二进制转换成 0~15 的十进制，最后映射到 0~9 或 A~F。</li><li><strong>十六进制 → 二进制</strong>：将十六进制的每位符号（0~F）转成对应的 4 位二进制，最后合并即可。</li></ol><p>通过以上步骤，你可以在二进制和十六进制之间进行快速、准确的转换。</p>`,24)]))}const c=i(t,[["render",r],["__file","binary-and-hexadecimal-conversion-rules.html.vue"]]),h=JSON.parse('{"path":"/public-articles/binary-and-hexadecimal-conversion-rules.html","title":"帮助解释二进制和十六机制的换算规则。","lang":"zh-CN","frontmatter":{"description":"帮助解释二进制和十六机制的换算规则。 二进制（Binary）和十六进制（Hexadecimal）都是在计算机领域中最常见的数值表示方法。二进制用 0 和 1 表示数据，十六进制用 0～9 和 A～F（或 a～f）表示数据。下面我们来看看这两种进制之间是如何进行换算的。 1. 基本概念 二进制（binary） 进制基数为 2 只有两个数字：0 和 1 每...","head":[["meta",{"property":"og:url","content":"https://github.com/biezhihua/public-articles/binary-and-hexadecimal-conversion-rules.html"}],["meta",{"property":"og:site_name","content":"biezhihua的日常"}],["meta",{"property":"og:title","content":"帮助解释二进制和十六机制的换算规则。"}],["meta",{"property":"og:description","content":"帮助解释二进制和十六机制的换算规则。 二进制（Binary）和十六进制（Hexadecimal）都是在计算机领域中最常见的数值表示方法。二进制用 0 和 1 表示数据，十六进制用 0～9 和 A～F（或 a～f）表示数据。下面我们来看看这两种进制之间是如何进行换算的。 1. 基本概念 二进制（binary） 进制基数为 2 只有两个数字：0 和 1 每..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-03-08T14:25:34.000Z"}],["meta",{"property":"article:modified_time","content":"2025-03-08T14:25:34.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"帮助解释二进制和十六机制的换算规则。\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-03-08T14:25:34.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"别志华\\",\\"url\\":\\"https://github.com/biezhihua\\"}]}"]]},"git":{"createdTime":1735209725000,"updatedTime":1741443934000,"contributors":[{"name":"biezhihua","username":"biezhihua","email":"biezhihua@gmail.com","commits":2,"url":"https://github.com/biezhihua"}]},"readingTime":{"minutes":2.95,"words":884},"filePathRelative":"public-articles/binary-and-hexadecimal-conversion-rules.md","localizedDate":"2024年12月26日","excerpt":"","autoDesc":true}');export{c as comp,h as data};
