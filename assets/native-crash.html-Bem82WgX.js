import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{e as a,f as n,o as l}from"./app-CpvZAdF4.js";const e={};function h(t,s){return l(),a("div",null,s[0]||(s[0]=[n(`<h1 id="android-问题排查-native-crash-problems" tabindex="-1"><a class="header-anchor" href="#android-问题排查-native-crash-problems"><span>Android | 问题排查 | Native Crash Problems</span></a></h1><h2 id="关于native-crash的类型" tabindex="-1"><a class="header-anchor" href="#关于native-crash的类型"><span>关于Native Crash的类型</span></a></h2><p>一般来说，在Android平台上，将出现在JNI、C++、C中的Crash称为Native Crash。</p><p>Google官方将<a href="https://source.android.com/docs/core/tests/debug/native-crash" target="_blank" rel="noopener noreferrer">NativeCrash</a>分类多种类型，并列举了经常碰到的10种：</p><ul><li>Abort</li><li>Pure null pointer dereference</li><li>Low-address null pointer dereference</li><li>FORTIFY failure</li><li>Stack corruption detected by -fstack-protector</li><li>Seccomp SIGSYS from a disallowed system call</li><li>Execute-only memory violation (Android 10 only)</li><li>Error detected by fdsan</li><li>Investigating crash dumps</li><li>Reading tombstones</li></ul><p>其中最为我们所熟知的就是<code>Pure null pointer dereference</code>空指针异常，它的Crash堆栈如下：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pid:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 25326,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> tid:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 25326,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> name:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> crasher</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &gt;&gt;&gt; </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">crasher</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;&lt;&lt;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">signal</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 11</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (SIGSEGV), code 1 (</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">SEGV_MAPERR</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">), fault addr 0x0</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">    ....</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">backtrace:</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">    ....</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>而<code>Pure null pointer dereference</code>类型的空指针异常实际上却是<code>Low-address null pointer dereference</code>类型空指针异常的一种特殊类型，它的Crash堆栈如下：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pid:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 25405,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> tid:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 25405,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> name:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> crasher</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &gt;&gt;&gt; </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">crasher</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;&lt;&lt;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">signal</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 11</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (SIGSEGV), code 1 (</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">SEGV_MAPERR</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">), fault addr 0xc</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">    ....</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">backtrace:</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">    ....</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>两者非常类似，仅有fault addr不同，这方面的差异Google文档中有详细说明，可自行查阅。</p><h2 id="识别错误类型" tabindex="-1"><a class="header-anchor" href="#识别错误类型"><span>识别错误类型</span></a></h2><p>近期碰到了一例出现在GaiaX内的stretch.so的空指针异常，由于stretch.so是用rust编写和生成的so，与常规该问题的排查流程不太一致，所以这里记录一下本次的排查过程。</p><p>这里首先贴一下Crash信息，先做下基本的排查。</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pid:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 19586,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> tid:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 19586</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &gt;&gt;&gt; </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">com.xxx.xxx</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;&lt;&lt;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">signal</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 11</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (SIGSEGV), code 1 (</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">SEGV_MAPERR</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">), fault addr 000000000000009f</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  x0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">   b4000071ed95cab0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  x1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">   0000007fdd7b7104</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  x2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">   b4000071cd9f2890</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  x3</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">   b40000713d9ef890</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  x4</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">   ffffffffffffffff</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  x5</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">   00000070c3d53598</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  x6</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">   0000000000000000</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  x7</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">   0000000000000000</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  x8</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">   c56b08e9bbba74a6</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  x9</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">   c56b08e9bbba74a6</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  x10</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  0000000000430000</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  x11</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  000000712d3fe40c</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  x12</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  000000712d3fe454</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  x13</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  000000712d3fe49c</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  x14</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  000000712d3fe4fc</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  x15</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  0000000000000000</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  x16</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  0000006fb694f37c</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  x17</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  0000000000000000</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  x18</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  00000000000000a0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  x19</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  b40000729d95d7b0</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  x20</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  0000000000000000</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  x21</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  b40000729d95d7b0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  x22</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  00000073c4061000</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  x23</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  b40000729d95d868</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  x24</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  000000711c779828</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  x25</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  00000073c4061000</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  x26</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  0000000000003c1d</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  x27</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  000000712d92e000</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  x28</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  0000000000000000</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  x29</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  0000007fdd7b71e0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  x30</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  00000070c2331a18</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  sp</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">   0000007fdd7b6fc0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  pc</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">   0000006fb694f388</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  pstate</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0000000060001000</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  v0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">   0000007fdd7b93700000000000000000</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  v1</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">   00000000000000000000000000000000</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  v2</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">   00000000000000000000000000000000</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  v3</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">   000000000000000000000000429e0000</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  v4</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">   00000000000000000000000000000000</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  v5</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">   00000000000000000000000000000000</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  v6</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">   00000000000000000000000000000000</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  v7</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">   00000000000000000000000000000000</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  v8</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">   00000000000000000000000000000000</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  v9</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">   00000000000000000000000000000000</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  v10</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  00000000000000000000000000000000</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  v11</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  00000000000000000000000000000000</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  v12</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  00000000000000000000000000000000</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  v13</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  00000000000000000000000000000000</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  v14</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  00000000000000000000000000000000</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  v15</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  00000000000000000000000000000000</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  v16</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  000000000000000000000000418bc6a8</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  v17</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  00000000000000000000000043070000</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  v18</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  00000000000000000000000000000000</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  v19</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  00000000000000000000000000000000</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  v20</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  00000000000000000000000080000000</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  v21</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  00000000000000000000000080000000</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  v22</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  00000000000000000000000000000000</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  v23</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  00000000000000000000000000000000</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  v24</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  00000000000000000000000000000000</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  v25</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  00000000000000000000000000000000</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  v26</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  00000000000000000000000000000000</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  v27</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  00000000000000000000000000000000</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  v28</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  00000000000000000000000000000000</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  v29</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  00000000000000000000000000000000</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  v30</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  00000000000000000000000000000000</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  v31</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  00000000000000000000000000000000</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  fpsr</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 0800001b</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  fpcr</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 00000000</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    #00 pc 0xf388 libstretch.so (Java_app_visly_stretch_Node_nSetStyle+12)</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    #01 pc 0xa14 base.odex</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们可以得出一些基础的信息：</p><ul><li>第2行，<code>signal 11 (SIGSEGV), code 1 (SEGV_MAPERR), fault addr 000000000000009f</code><ul><li>符合第三种错误类型<code>Low-address null pointer dereference</code>的描述，简单来说就是个空指针错误。</li></ul></li><li>第29行，<code>#00 pc 0xf388 libstretch.so (Java_app_visly_stretch_Node_nSetStyle+12)</code><ul><li>发生Crash的so名称 - <code>libstretch.so</code>。</li><li>发生Crash的方法名 - <code>Java_app_visly_stretch_Node_nSetStyle</code>。</li><li>发生Crash的错误地址(fault address) - <code>0xf388</code>。</li></ul></li></ul><h2 id="定位错误行数" tabindex="-1"><a class="header-anchor" href="#定位错误行数"><span>定位错误行数</span></a></h2><h3 id="addr2line工具介绍" tabindex="-1"><a class="header-anchor" href="#addr2line工具介绍"><span>addr2line工具介绍</span></a></h3><p>这里要先介绍一款工具 - <a href="https://linux.die.net/man/1/addr2line" target="_blank" rel="noopener noreferrer">addr2line</a>，它能显示一个地址的源码文件名和行数，可以帮助我们定位Native Crash的错误行数。</p><p>它的常用命令为：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># addr2line - convert addresses into file names and line numbers.</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># -i --inlines If the address belongs to a function that was inlined, the source information for all enclosing scopes back to the first  non-inlined function will also be printed.</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># -C --demangle[=style] Decode (demangle) low-level symbol names into user-level names.</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># -f --functions Display function names as well as file and line number information.</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># -e --exe=filename Specify the name of the executable for which addresses should be translated.</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">./addr2line</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [-C] [-i] [-f] [-e filename] [addr]</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">./addr2line</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -C</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -i</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -f</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -e</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ./xxx.so</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0x0c</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>值得注意的，addr2line工具的目标so需要带有symbol符号信息，才能正确的显示出源码文件和行数。</p><p>对没有符号的so使用addr2line，结果示例：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">/aarch64-linux-android-addr2line</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -i</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -C</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -f</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -e</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ./libstretch.so</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  0xf388</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Java_app_visly_stretch_Node_nSetStyle</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">?</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>对有符号的so使用add2line，结果示例：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">./aarch64-linux-android-addr2line</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -i</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -C</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -f</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -e</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ./libstretch.so</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  0xf388</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Java_app_visly_stretch_Node_nSetStyle</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">./GaiaX/GaiaXStretch/bindings/kotlin/stretch/src/main/rust/src/lib.rs:364</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="为stretch-so增加符号信息" tabindex="-1"><a class="header-anchor" href="#为stretch-so增加符号信息"><span>为stretch.so增加符号信息</span></a></h3><p>根据addr2line的使用条件，需要为stretch.so增加符号信息。由于stretch.so是使用Rust打包出来的，所以为打包命令增加<code>RUSTFLAGS=-g</code>的标记，打包命令如下：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">RUSTFLAGS</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">-g</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   cargo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> build</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --target=aarch64-linux-android</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --release</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>当然还有其他方法，可以参考<a href="https://stackoverflow.com/questions/38803760/how-to-get-a-release-build-with-debugging-information-when-using-cargo" target="_blank" rel="noopener noreferrer">这里</a>。</p><h3 id="定位问题行数" tabindex="-1"><a class="header-anchor" href="#定位问题行数"><span>定位问题行数</span></a></h3><p>通过使用addr2line和带有symbol的so，可以得到具体的错误行数：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">./aarch64-linux-android-addr2line</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -i</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -C</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -f</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -e</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ./libstretch.so</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  0xf388</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Java_app_visly_stretch_Node_nSetStyle</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">./GaiaX/GaiaXStretch/bindings/kotlin/stretch/src/main/rust/src/lib.rs:364</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>具体错误代码为：</p><div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">352</span><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF;"> #[no_mangle]</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">353</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> unsafe</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> extern</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;C&quot;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> Java_app_visly_stretch_Node_nSetStyle</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">354</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">     _</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B;">JNIEnv</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">355</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">     _</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B;">JObject</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">356</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">     stretch</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">jlong</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">357</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">     node</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">jlong</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">358</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">     style</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">jlong</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">359</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> ) {</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">360</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">     let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> style</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B;"> Box</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">from_raw</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">style</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> as</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> *</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">mut</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B;"> Style</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">361</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">     let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> stretch</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B;"> Box</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">from_raw</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">stretch</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> as</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> *</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">mut</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B;"> Stretch</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">362</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">     let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> node</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B;"> Box</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">from_raw</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">node</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> as</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> *</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">mut</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B;"> Node</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">363</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> </span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">364</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">     stretch</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">set_style</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(*</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">node</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, *</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">style</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">).</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">unwrap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">365</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> </span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">366</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B;">     Box</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">leak</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">style</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">367</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B;">     Box</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">leak</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">node</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">368</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B;">     Box</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">leak</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">stretch</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">369</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> }</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可以得知在364行为node设置style发生空指针异常，其根源就是*style引用有问题：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>364     stretch.set_style(*node, *style).unwrap();</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="问题修复" tabindex="-1"><a class="header-anchor" href="#问题修复"><span>问题修复</span></a></h2><p>通过上下文推断可以知道是<code>style</code>的引用传递有问题。反推到Java层，可以得知在<code>setStyle</code>函数中未对<code>style.rustptr</code>做合法性判断：</p><p>错误代码：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>fun setStyle(style: Style) {</span></span>
<span class="line"><span>    synchronized(Stretch::class.java) {</span></span>
<span class="line"><span>        // 未对style.rustptr做合法性判断</span></span>
<span class="line"><span>        nSetStyle(Stretch.ptr, rustptr, style.rustptr)</span></span>
<span class="line"><span>        this.style = style</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>修复代码：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>fun safeSetStyle(style: Style): Boolean {</span></span>
<span class="line"><span>    synchronized(Stretch::class.java) {</span></span>
<span class="line"><span>        // 对style.rustptr做合法性判断</span></span>
<span class="line"><span>        if (rustptr != -1L &amp;&amp; style.rustptr != -1L) {</span></span>
<span class="line"><span>            nSetStyle(Stretch.ptr, rustptr, style.rustptr)</span></span>
<span class="line"><span>            this.style = style</span></span>
<span class="line"><span>            return true</span></span>
<span class="line"><span>        } else {</span></span>
<span class="line"><span>            return false</span></span>
<span class="line"><span>        }</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="问题验证" tabindex="-1"><a class="header-anchor" href="#问题验证"><span>问题验证</span></a></h2><p>当我们完成代码修复后工作后，别忘记还有最重要的一个步骤，就是问题的验证。</p><p>问题的验证分为多种类型，我们这里选择一劳永逸的方式：<strong>在单元测试中复现错误，验证修复结果，并将单元测试加入到自动化测试中</strong>。</p><p>如此一来此问题就再也不会出现在我们的项目中了。</p><p>测试用例如下：</p><div class="language-kotlin line-numbers-mode" data-highlighter="shiki" data-ext="kotlin" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">@Test</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">fun</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> node_set_style_null_pointer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">() {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    Stretch.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">init</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    val</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> style1 </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> Style</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    style1.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">safeInit</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    val</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> node </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> Node</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;node&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, style1)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    val</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> style2 </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> Style</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    style2.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">safeInit</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    style2.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">safeFree</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    // 复现问题场景，设置已经释放的style</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    val</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> safeSetStyle </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> node.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">safeSetStyle</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(style2)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    // 验证safeSetStyle是否执行成功</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    Assert.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">assertEquals</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">false</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, safeSetStyle)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>当我们使用未修复的代码执行该单元测试时，会在logcat中发现如下错误，它的关键信息和在真实App出现的Crash几乎一模一样，这就代表完美复现了正式环境中的错误：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>A  Build fingerprint: &#39;Android/sdk_phone_x86/generic_x86:11/RSR1.210210.001.A1/7193139:userdebug/dev-keys&#39;</span></span>
<span class="line"><span>A  Revision: &#39;0&#39;</span></span>
<span class="line"><span>A  ABI: &#39;x86&#39;</span></span>
<span class="line"><span>A  Timestamp: 2023-03-09 14:30:34+0800</span></span>
<span class="line"><span>A  pid: 27566, tid: 27588, name: roidJUnitRunner  &gt;&gt;&gt; com.alibaba.gaiax.test &lt;&lt;&lt;</span></span>
<span class="line"><span>A  uid: 10127</span></span>
<span class="line"><span>A  signal 11 (SIGSEGV), code 1 (SEGV_MAPERR), fault addr 0xffffffff</span></span>
<span class="line"><span>A      eax ffffffff  ebx c6f35f54  ecx 000000d4  edx c7154bb8</span></span>
<span class="line"><span>A      edi c7154bb8  esi 00000000</span></span>
<span class="line"><span>A      ebp 00000000  esp c7154b70  eip f5fdf3cb</span></span>
<span class="line"><span>A  backtrace:</span></span>
<span class="line"><span>A        #00 pc 000563cb  /apex/com.android.runtime/lib/bionic/libc.so (memmove_generic+219) (BuildId: 6e3a0180fa6637b68c0d181c343e6806)</span></span>
<span class="line"><span>A        #01 pc 0000d80e  /data/app/~~YUo3uOKA7Gzgqd3nfNHytA==/com.alibaba.gaiax.test-JJGLuWJRiWwhUZw00pvfKg==/lib/x86/libstretch.so (Java_app_visly_stretch_Node_nSetStyle+78)</span></span>
<span class="line"><span>A        #02 pc 001422b2  /apex/com.android.art/lib/libart.so (art_quick_generic_jni_trampoline+82) (BuildId: bf39832c4acabbc939d5c516b6f1d211)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>最后，当我们使用修复过的代码执行该单元测试时，它会正常通过。</p><h2 id="引用" tabindex="-1"><a class="header-anchor" href="#引用"><span>引用</span></a></h2><ul><li>https://github.com/alibaba/GaiaX/pull/358</li><li>https://stackoverflow.com/questions/38803760/how-to-get-a-release-build-with-debugging-information-when-using-cargo</li><li>https://linux.die.net/man/1/addr2line</li><li>https://source.android.com/docs/core/tests/debug/native-crash</li><li>https://www.cnblogs.com/rocket-ban/p/14717425.html</li><li>https://blog.csdn.net/toyauko/article/details/82416429</li></ul>`,54)]))}const d=i(e,[["render",h],["__file","native-crash.html.vue"]]),r=JSON.parse('{"path":"/learn-android/problem/native-crash.html","title":"Android | 问题排查 | Native Crash Problems","lang":"zh-CN","frontmatter":{"tag":["android","problem"],"description":"Android | 问题排查 | Native Crash Problems 关于Native Crash的类型 一般来说，在Android平台上，将出现在JNI、C++、C中的Crash称为Native Crash。 Google官方将NativeCrash分类多种类型，并列举了经常碰到的10种： Abort Pure null pointer de...","head":[["meta",{"property":"og:url","content":"https://github.com/biezhihua/learn-android/problem/native-crash.html"}],["meta",{"property":"og:site_name","content":"biezhihua的日常"}],["meta",{"property":"og:title","content":"Android | 问题排查 | Native Crash Problems"}],["meta",{"property":"og:description","content":"Android | 问题排查 | Native Crash Problems 关于Native Crash的类型 一般来说，在Android平台上，将出现在JNI、C++、C中的Crash称为Native Crash。 Google官方将NativeCrash分类多种类型，并列举了经常碰到的10种： Abort Pure null pointer de..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-03-08T14:25:34.000Z"}],["meta",{"property":"article:tag","content":"android"}],["meta",{"property":"article:tag","content":"problem"}],["meta",{"property":"article:modified_time","content":"2025-03-08T14:25:34.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Android | 问题排查 | Native Crash Problems\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-03-08T14:25:34.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"别志华\\",\\"url\\":\\"https://github.com/biezhihua\\"}]}"]]},"git":{"createdTime":1678770176000,"updatedTime":1741443934000,"contributors":[{"name":"biezhihua","username":"biezhihua","email":"biezhihua@gmail.com","commits":5,"url":"https://github.com/biezhihua"}]},"readingTime":{"minutes":5.29,"words":1588},"filePathRelative":"learn-android/problem/native-crash.md","localizedDate":"2023年3月14日","excerpt":"","autoDesc":true}');export{d as comp,r as data};
