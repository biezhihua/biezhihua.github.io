import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{e as a,f as l,o as t}from"./app-CeWOgC-6.js";const n={};function e(h,i){return t(),a("div",null,i[0]||(i[0]=[l(`<h1 id="在-quickjs-中-js-eval-函数用于在指定的上下文中执行-javascript-代码。您可以通过设置不同的标志-flags-来控制代码的解析和执行方式。以下是您列出的每个标志的含义、作用以及如何使用它们的详细说明。" tabindex="-1"><a class="header-anchor" href="#在-quickjs-中-js-eval-函数用于在指定的上下文中执行-javascript-代码。您可以通过设置不同的标志-flags-来控制代码的解析和执行方式。以下是您列出的每个标志的含义、作用以及如何使用它们的详细说明。"><span>在 QuickJS 中，<code>JS_Eval()</code> 函数用于在指定的上下文中执行 JavaScript 代码。您可以通过设置不同的标志（flags）来控制代码的解析和执行方式。以下是您列出的每个标志的含义、作用以及如何使用它们的详细说明。</span></a></h1><div class="language-c line-numbers-mode" data-highlighter="shiki" data-ext="c" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">/* JS_Eval() flags */</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">#define</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> JS_EVAL_TYPE_GLOBAL</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">   (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> &lt;&lt;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> /* 全局代码（默认） */</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">#define</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> JS_EVAL_TYPE_MODULE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">   (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> &lt;&lt;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> /* 模块代码 */</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">#define</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> JS_EVAL_TYPE_DIRECT</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">   (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">2</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> &lt;&lt;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> /* 直接调用（内部使用） */</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">#define</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> JS_EVAL_TYPE_INDIRECT</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">3</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> &lt;&lt;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> /* 间接调用（内部使用） */</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">#define</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> JS_EVAL_TYPE_MASK</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">     (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">3</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> &lt;&lt;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">#define</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> JS_EVAL_FLAG_STRICT</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">   (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> &lt;&lt;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> /* 强制“严格”模式 */</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">#define</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> JS_EVAL_FLAG_STRIP</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> &lt;&lt;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> /* 强制“剥离”模式 */</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="标志的含义和作用" tabindex="-1"><a class="header-anchor" href="#标志的含义和作用"><span>标志的含义和作用</span></a></h2><h3 id="_1-评估类型标志" tabindex="-1"><a class="header-anchor" href="#_1-评估类型标志"><span>1. 评估类型标志</span></a></h3><p>这些标志决定了被评估代码的类型以及 JavaScript 引擎应该如何解析它。</p><ul><li><p><strong><code>JS_EVAL_TYPE_GLOBAL</code></strong> <code>(0 &lt;&lt; 0)</code></p><ul><li><strong>含义</strong>：将代码作为全局代码执行。</li><li><strong>作用</strong>：代码在全局作用域中执行。这是默认行为，如果未指定类型标志，将采用此方式。</li><li><strong>使用</strong>：当您希望被评估的代码影响全局上下文时，使用此标志。</li></ul></li><li><p><strong><code>JS_EVAL_TYPE_MODULE</code></strong> <code>(1 &lt;&lt; 0)</code></p><ul><li><strong>含义</strong>：将代码作为模块执行。</li><li><strong>作用</strong>：将代码解析为 ECMAScript 模块，允许使用 <code>import</code> 和 <code>export</code> 语句。</li><li><strong>使用</strong>：当您的代码包含模块语法，或者您希望将代码封装在自己的模块作用域中时，使用此标志。</li></ul></li><li><p><strong><code>JS_EVAL_TYPE_DIRECT</code></strong> <code>(2 &lt;&lt; 0)</code> 和 <strong><code>JS_EVAL_TYPE_INDIRECT</code></strong> <code>(3 &lt;&lt; 0)</code></p><ul><li><strong>含义</strong>：用于直接和间接的 <code>eval()</code> 调用。</li><li><strong>作用</strong>：主要供引擎内部使用，以处理特定的代码评估情况。</li><li><strong>使用</strong>：通常不直接由开发者使用。</li></ul></li><li><p><strong><code>JS_EVAL_TYPE_MASK</code></strong> <code>(3 &lt;&lt; 0)</code></p><ul><li><strong>含义</strong>：用于提取评估类型的位掩码。</li><li><strong>作用</strong>：在内部用于隔离评估类型的位。</li><li><strong>使用</strong>：一般不直接使用此标志。</li></ul></li></ul><h3 id="_2-执行模式标志" tabindex="-1"><a class="header-anchor" href="#_2-执行模式标志"><span>2. 执行模式标志</span></a></h3><p>这些标志改变了被评估代码的执行方式。</p><ul><li><p><strong><code>JS_EVAL_FLAG_STRICT</code></strong> <code>(1 &lt;&lt; 3)</code></p><ul><li><strong>含义</strong>：强制严格模式执行。</li><li><strong>作用</strong>：代码在 JavaScript 的严格模式下执行，实施更严格的语法和错误检查。</li><li><strong>使用</strong>：当您希望代码遵循严格模式，以捕获潜在错误时，使用此标志。</li></ul></li><li><p><strong><code>JS_EVAL_FLAG_STRIP</code></strong> <code>(1 &lt;&lt; 4)</code></p><ul><li><strong>含义</strong>：启用剥离模式。</li><li><strong>作用</strong>：从编译后的代码中移除调试信息，例如源代码和变量名。这可以减少内存使用并防止代码被反向工程。</li><li><strong>使用</strong>：当您希望优化内存使用或增强代码安全性时，使用此标志。</li></ul></li></ul><h2 id="如何使用这些标志" tabindex="-1"><a class="header-anchor" href="#如何使用这些标志"><span>如何使用这些标志</span></a></h2><p>在调用 <code>JS_Eval()</code> 函数时，您可以通过 <code>flags</code> 参数传递这些标志，以控制代码的评估方式。可以使用按位或操作符（<code>|</code>）组合多个标志。</p><h3 id="函数签名" tabindex="-1"><a class="header-anchor" href="#函数签名"><span>函数签名</span></a></h3><div class="language-c line-numbers-mode" data-highlighter="shiki" data-ext="c" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">JSValue </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">JS_Eval</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">JSContext </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">*</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">ctx</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">                const</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> char</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> *</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">input</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">                size_t</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> input_len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">                const</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> char</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> *</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">filename</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">                int</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> flags</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><strong><code>ctx</code></strong>：JavaScript 上下文。</li><li><strong><code>input</code></strong>：要评估的 JavaScript 代码。</li><li><strong><code>input_len</code></strong>：代码的长度。</li><li><strong><code>filename</code></strong>：用于错误报告的文件名。</li><li><strong><code>flags</code></strong>：评估标志。</li></ul><h3 id="示例" tabindex="-1"><a class="header-anchor" href="#示例"><span>示例</span></a></h3><ol><li><p><strong>在严格模式下评估全局代码</strong></p><div class="language-c line-numbers-mode" data-highlighter="shiki" data-ext="c" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> flags </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> JS_EVAL_TYPE_GLOBAL </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">|</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> JS_EVAL_FLAG_STRICT;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">JSValue result </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> JS_Eval</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">ctx</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> code</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> code_len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;myfile.js&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> flags</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><strong>评估模块代码</strong></p><div class="language-c line-numbers-mode" data-highlighter="shiki" data-ext="c" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> flags </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> JS_EVAL_TYPE_MODULE;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">JSValue result </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> JS_Eval</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">ctx</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> code</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> code_len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;mymodule.js&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> flags</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><strong>在严格和剥离模式下评估模块代码</strong></p><div class="language-c line-numbers-mode" data-highlighter="shiki" data-ext="c" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> flags </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> JS_EVAL_TYPE_MODULE </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">|</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> JS_EVAL_FLAG_STRICT </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">|</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> JS_EVAL_FLAG_STRIP;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">JSValue result </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> JS_Eval</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">ctx</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> code</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> code_len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;securemodule.js&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> flags</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h3 id="注意事项" tabindex="-1"><a class="header-anchor" href="#注意事项"><span>注意事项</span></a></h3><ul><li><strong>组合标志</strong>：使用按位或操作符（<code>|</code>）来组合多个标志。</li><li><strong>默认行为</strong>：如果未指定类型标志，默认使用 <code>JS_EVAL_TYPE_GLOBAL</code>。</li><li><strong>内部标志</strong>：除非您在底层扩展或与引擎交互，否则应避免使用 <code>JS_EVAL_TYPE_DIRECT</code> 和 <code>JS_EVAL_TYPE_INDIRECT</code>。</li><li><strong>错误处理</strong>：始终使用 <code>JS_IsException()</code> 检查返回的 <code>JSValue</code> 是否包含异常。</li></ul><h3 id="实用建议" tabindex="-1"><a class="header-anchor" href="#实用建议"><span>实用建议</span></a></h3><ul><li><strong>严格模式</strong>：建议启用 <code>JS_EVAL_FLAG_STRICT</code>，以便及早捕获错误。</li><li><strong>剥离模式</strong>：在生产环境中使用 <code>JS_EVAL_FLAG_STRIP</code>，以优化性能和增强安全性。</li><li><strong>模块代码</strong>：在评估模块代码时，确保代码符合 ECMAScript 模块语法。</li></ul><h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结"><span>总结</span></a></h2><ul><li><strong><code>JS_EVAL_TYPE_GLOBAL</code></strong>：在全局作用域中执行代码（默认）。</li><li><strong><code>JS_EVAL_TYPE_MODULE</code></strong>：将代码作为 ECMAScript 模块执行。</li><li><strong><code>JS_EVAL_FLAG_STRICT</code></strong>：强制以严格模式执行代码。</li><li><strong><code>JS_EVAL_FLAG_STRIP</code></strong>：移除调试信息，优化内存和安全性。</li></ul><p>通过理解和使用这些标志，您可以控制 QuickJS 中 JavaScript 代码的执行环境，满足您特定的应用需求。</p>`,23)]))}const r=s(n,[["render",e],["__file","quickjs-eval-flags.html.vue"]]),d=JSON.parse('{"path":"/public-articles/quickjs-eval-flags.html","title":"在 QuickJS 中，JS_Eval() 函数用于在指定的上下文中执行 JavaScript 代码。您可以通过设置不同的标志（flags）来控制代码的解析和执行方式。以下是您列出的每个标志的含义、作用以及如何使用它们的详细说明。","lang":"zh-CN","frontmatter":{"description":"在 QuickJS 中，JS_Eval() 函数用于在指定的上下文中执行 JavaScript 代码。您可以通过设置不同的标志（flags）来控制代码的解析和执行方式。以下是您列出的每个标志的含义、作用以及如何使用它们的详细说明。 标志的含义和作用 1. 评估类型标志 这些标志决定了被评估代码的类型以及 JavaScript 引擎应该如何解析它。 JS...","head":[["meta",{"property":"og:url","content":"https://github.com/biezhihua/public-articles/quickjs-eval-flags.html"}],["meta",{"property":"og:site_name","content":"biezhihua的日常"}],["meta",{"property":"og:title","content":"在 QuickJS 中，JS_Eval() 函数用于在指定的上下文中执行 JavaScript 代码。您可以通过设置不同的标志（flags）来控制代码的解析和执行方式。以下是您列出的每个标志的含义、作用以及如何使用它们的详细说明。"}],["meta",{"property":"og:description","content":"在 QuickJS 中，JS_Eval() 函数用于在指定的上下文中执行 JavaScript 代码。您可以通过设置不同的标志（flags）来控制代码的解析和执行方式。以下是您列出的每个标志的含义、作用以及如何使用它们的详细说明。 标志的含义和作用 1. 评估类型标志 这些标志决定了被评估代码的类型以及 JavaScript 引擎应该如何解析它。 JS..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-03-08T14:25:34.000Z"}],["meta",{"property":"article:modified_time","content":"2025-03-08T14:25:34.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"在 QuickJS 中，JS_Eval() 函数用于在指定的上下文中执行 JavaScript 代码。您可以通过设置不同的标志（flags）来控制代码的解析和执行方式。以下是您列出的每个标志的含义、作用以及如何使用它们的详细说明。\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-03-08T14:25:34.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"别志华\\",\\"url\\":\\"https://github.com/biezhihua\\"}]}"]]},"git":{"createdTime":1726743999000,"updatedTime":1741443934000,"contributors":[{"name":"biezhihua","username":"biezhihua","email":"biezhihua@gmail.com","commits":2,"url":"https://github.com/biezhihua"}]},"readingTime":{"minutes":3.52,"words":1055},"filePathRelative":"public-articles/quickjs-eval-flags.md","localizedDate":"2024年9月19日","excerpt":"","autoDesc":true}');export{r as comp,d as data};
