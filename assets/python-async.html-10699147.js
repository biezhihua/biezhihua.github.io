const l=JSON.parse('{"key":"v-20a9fc27","path":"/public-articles/python-async.html","title":"python async的原理","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"一、协程（Coroutine）","slug":"一、协程-coroutine","link":"#一、协程-coroutine","children":[{"level":3,"title":"1.1 协程的定义","slug":"_1-1-协程的定义","link":"#_1-1-协程的定义","children":[]},{"level":3,"title":"1.2 Python 中的协程","slug":"_1-2-python-中的协程","link":"#_1-2-python-中的协程","children":[]},{"level":3,"title":"1.3 协程的工作原理","slug":"_1-3-协程的工作原理","link":"#_1-3-协程的工作原理","children":[]}]},{"level":2,"title":"二、事件循环（Event Loop）","slug":"二、事件循环-event-loop","link":"#二、事件循环-event-loop","children":[{"level":3,"title":"2.1 事件循环的概念","slug":"_2-1-事件循环的概念","link":"#_2-1-事件循环的概念","children":[]},{"level":3,"title":"2.2 事件循环的工作流程","slug":"_2-2-事件循环的工作流程","link":"#_2-2-事件循环的工作流程","children":[]},{"level":3,"title":"2.3 事件循环的实现","slug":"_2-3-事件循环的实现","link":"#_2-3-事件循环的实现","children":[]}]},{"level":2,"title":"三、任务（Task）和 Future 对象","slug":"三、任务-task-和-future-对象","link":"#三、任务-task-和-future-对象","children":[{"level":3,"title":"3.1 Future 对象","slug":"_3-1-future-对象","link":"#_3-1-future-对象","children":[]},{"level":3,"title":"3.2 Task 对象","slug":"_3-2-task-对象","link":"#_3-2-task-对象","children":[]},{"level":3,"title":"3.3 Task 的工作原理","slug":"_3-3-task-的工作原理","link":"#_3-3-task-的工作原理","children":[]}]},{"level":2,"title":"四、可等待对象（Awaitable）和 await 关键字","slug":"四、可等待对象-awaitable-和-await-关键字","link":"#四、可等待对象-awaitable-和-await-关键字","children":[{"level":3,"title":"4.1 可等待对象","slug":"_4-1-可等待对象","link":"#_4-1-可等待对象","children":[]},{"level":3,"title":"4.2 await 的作用","slug":"_4-2-await-的作用","link":"#_4-2-await-的作用","children":[]},{"level":3,"title":"4.3 await 的工作原理","slug":"_4-3-await-的工作原理","link":"#_4-3-await-的工作原理","children":[]}]},{"level":2,"title":"五、协程的调度和执行","slug":"五、协程的调度和执行","link":"#五、协程的调度和执行","children":[{"level":3,"title":"5.1 协程的生命周期","slug":"_5-1-协程的生命周期","link":"#_5-1-协程的生命周期","children":[]},{"level":3,"title":"5.2 事件循环如何调度协程","slug":"_5-2-事件循环如何调度协程","link":"#_5-2-事件循环如何调度协程","children":[]}]},{"level":2,"title":"六、Python 异步编程的演变","slug":"六、python-异步编程的演变","link":"#六、python-异步编程的演变","children":[{"level":3,"title":"6.1 基于生成器的协程","slug":"_6-1-基于生成器的协程","link":"#_6-1-基于生成器的协程","children":[]},{"level":3,"title":"6.2 原生协程","slug":"_6-2-原生协程","link":"#_6-2-原生协程","children":[]},{"level":3,"title":"6.3 原生协程的优势","slug":"_6-3-原生协程的优势","link":"#_6-3-原生协程的优势","children":[]}]},{"level":2,"title":"七、与多线程和多进程的区别","slug":"七、与多线程和多进程的区别","link":"#七、与多线程和多进程的区别","children":[{"level":3,"title":"7.1 多线程","slug":"_7-1-多线程","link":"#_7-1-多线程","children":[]},{"level":3,"title":"7.2 多进程","slug":"_7-2-多进程","link":"#_7-2-多进程","children":[]},{"level":3,"title":"7.3 异步协程","slug":"_7-3-异步协程","link":"#_7-3-异步协程","children":[]},{"level":3,"title":"7.4 区别总结","slug":"_7-4-区别总结","link":"#_7-4-区别总结","children":[]}]},{"level":2,"title":"八、示例：一步步解析异步代码的执行过程","slug":"八、示例-一步步解析异步代码的执行过程","link":"#八、示例-一步步解析异步代码的执行过程","children":[{"level":3,"title":"8.1 代码示例","slug":"_8-1-代码示例","link":"#_8-1-代码示例","children":[]},{"level":3,"title":"8.2 执行过程解析","slug":"_8-2-执行过程解析","link":"#_8-2-执行过程解析","children":[]}]},{"level":2,"title":"九、结论","slug":"九、结论","link":"#九、结论","children":[]}],"git":{"createdTime":1728183548000,"updatedTime":1728183548000,"contributors":[{"name":"biezhihua","email":"biezhihua@gmail.com","commits":1}]},"readingTime":{"minutes":6.66,"words":1998},"filePathRelative":"public-articles/python-async.md","localizedDate":"2024年10月6日","excerpt":""}');export{l as data};
