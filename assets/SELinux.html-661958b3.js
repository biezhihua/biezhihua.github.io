import{_ as n,Y as i,Z as e,a2 as r}from"./framework-301d0703.js";const a={},o=r('<h1 id="selinux" tabindex="-1"><a class="header-anchor" href="#selinux" aria-hidden="true">#</a> SELinux</h1><p>SELinux（Security-Enhanced Linux）是一种安全子系统，最初由美国国家安全局（NSA）开发，后来被集成到Linux内核中，现广泛用于各种Linux发行版以及Android系统中。SELinux通过实施一套灵活的安全策略来提高系统的安全性，其核心功能是强制访问控制（MAC, Mandatory Access Control），这与传统的基于用户和组权限的自由访问控制（DAC, Discretionary Access Control）不同。</p><h3 id="工作原理" tabindex="-1"><a class="header-anchor" href="#工作原理" aria-hidden="true">#</a> 工作原理：</h3><p>SELinux将安全策略规则应用于系统上的进程和文件资源。这些规则定义了哪些进程可以访问哪些资源，以及可执行的操作类型（如读取、写入、执行等）。策略规则基于&quot;主体&quot;（如用户或进程）和&quot;客体&quot;（如文件、目录或端口）之间的关系。</p><h3 id="核心组件" tabindex="-1"><a class="header-anchor" href="#核心组件" aria-hidden="true">#</a> 核心组件：</h3><ol><li><strong>策略规则</strong>：由安全管理员定义和管理，描述了各种实体之间的访问权限。</li><li><strong>标签</strong>：每个文件、进程和资源都被标记有SELinux安全上下文，这是其访问控制决策的基础。</li><li><strong>安全上下文</strong>：包含关于主体或客体的安全信息，例如其安全级别、角色和类型。</li></ol><h3 id="selinux的模式" tabindex="-1"><a class="header-anchor" href="#selinux的模式" aria-hidden="true">#</a> SELinux的模式：</h3><ul><li><strong>强制模式</strong>（Enforcing）：SELinux将强制执行其安全策略，并阻止未经授权的访问。</li><li><strong>许可模式</strong>（Permissive）：SELinux不会阻止未经授权的访问，但会记录所有的违规行为，允许系统管理员审查潜在的安全问题。</li><li><strong>禁用模式</strong>（Disabled）：SELinux被完全禁用。</li></ul><h3 id="在android中的应用" tabindex="-1"><a class="header-anchor" href="#在android中的应用" aria-hidden="true">#</a> 在Android中的应用：</h3><p>在Android系统中，SELinux帮助隔离和限制应用程序和系统服务的权限，增强了设备对恶意软件和应用滥用的防护能力。例如，SELinux能确保一个应用不能读取或修改其他应用的数据，除非明确被授权。这是通过严格定义每个应用和系统进程的权限，并控制它们可以访问的系统资源来实现的。</p><p>总的来说，SELinux是一个强大的安全工具，它通过详细的策略和严格的权限控制来增强Linux和Android系统的安全性。</p>',11),t=[o];function s(d,u){return i(),e("div",null,t)}const h=n(a,[["render",s],["__file","SELinux.html.vue"]]);export{h as default};
